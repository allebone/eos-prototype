{"remainingRequest":"/home/beskar/eos-prototype-users/node_modules/thread-loader/dist/cjs.js!/home/beskar/eos-prototype-users/node_modules/babel-loader/lib/index.js!/home/beskar/eos-prototype-users/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/beskar/eos-prototype-users/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/beskar/eos-prototype-users/src/views/forms/form-element/autosuggest/AutoSuggestBasic.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/beskar/eos-prototype-users/src/views/forms/form-element/autosuggest/AutoSuggestBasic.vue","mtime":1609867154645},{"path":"/home/beskar/eos-prototype-users/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/beskar/eos-prototype-users/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/beskar/eos-prototype-users/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/beskar/eos-prototype-users/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/beskar/eos-prototype-users/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5kZXgtb2YuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zbGljZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgeyBWdWVBdXRvc3VnZ2VzdCB9IGZyb20gJ3Z1ZS1hdXRvc3VnZ2VzdCc7CmltcG9ydCBCQ2FyZENvZGUgZnJvbSAnQGNvcmUvY29tcG9uZW50cy9iLWNhcmQtY29kZS9CQ2FyZENvZGUudnVlJzsKaW1wb3J0IHsgY29kZUJhc2ljIH0gZnJvbSAnLi9jb2RlJzsKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIFZ1ZUF1dG9zdWdnZXN0OiBWdWVBdXRvc3VnZ2VzdCwKICAgIEJDYXJkQ29kZTogQkNhcmRDb2RlCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZGF0YXN1Z2dlc3Q6IFtdLAogICAgICBmaWx0ZXJlZE9wdGlvbnM6IFtdLAogICAgICBsaW1pdDogMTAsCiAgICAgIHNlbGVjdGVkOiBudWxsLAogICAgICBjb2RlQmFzaWM6IGNvZGVCYXNpYwogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIHRoaXMuJGh0dHAuZ2V0KCcvYXV0b3N1Z2dlc3QvZGF0YScpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICBfdGhpcy5kYXRhc3VnZ2VzdCA9IHJlczsKICAgIH0pOwogIH0sCiAgbWV0aG9kczogewogICAgb25JbnB1dENoYW5nZTogZnVuY3Rpb24gb25JbnB1dENoYW5nZSh0ZXh0KSB7CiAgICAgIGlmICh0ZXh0ID09PSAnJyB8fCB0ZXh0ID09PSB1bmRlZmluZWQpIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KICAgICAgLyogRnVsbCBjb250cm9sIG92ZXIgZmlsdGVyaW5nLiBNYXliZSBmZXRjaCBmcm9tIEFQST8hIFVwIHRvIHlvdSEhISAqLwoKCiAgICAgIHZhciBmaWx0ZXJlZERldmVsb3BlcnMgPSB0aGlzLmRhdGFzdWdnZXN0LmRhdGFbMF0uZGV2ZWxvcGVycy5maWx0ZXIoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICByZXR1cm4gaXRlbS5uYW1lLnRvTG93ZXJDYXNlKCkuaW5kZXhPZih0ZXh0LnRvTG93ZXJDYXNlKCkpID4gLTE7CiAgICAgIH0pLnNsaWNlKDAsIHRoaXMubGltaXQpOwogICAgICB2YXIgZmlsdGVyZWREZXNpZ25lciA9IHRoaXMuZGF0YXN1Z2dlc3QuZGF0YVswXS5kZXNpZ25lcnMuZmlsdGVyKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgcmV0dXJuIGl0ZW0ubmFtZS50b0xvd2VyQ2FzZSgpLmluZGV4T2YodGV4dC50b0xvd2VyQ2FzZSgpKSA+IC0xOwogICAgICB9KS5zbGljZSgwLCB0aGlzLmxpbWl0KTsKICAgICAgdmFyIGZpbHRlcmVkRGF0YSA9IGZpbHRlcmVkRGV2ZWxvcGVycy5jb25jYXQoZmlsdGVyZWREZXNpZ25lcik7CiAgICAgIHRoaXMuZmlsdGVyZWRPcHRpb25zID0gW3sKICAgICAgICBkYXRhOiBmaWx0ZXJlZERhdGEKICAgICAgfV07CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["AutoSuggestBasic.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAoBA,SAAA,cAAA,QAAA,iBAAA;AACA,OAAA,SAAA,MAAA,4CAAA;AACA,SAAA,SAAA,QAAA,QAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,cAAA,EAAA,cADA;AAEA,IAAA,SAAA,EAAA;AAFA,GADA;AAKA,EAAA,IALA,kBAKA;AACA,WAAA;AACA,MAAA,WAAA,EAAA,EADA;AAEA,MAAA,eAAA,EAAA,EAFA;AAGA,MAAA,KAAA,EAAA,EAHA;AAIA,MAAA,QAAA,EAAA,IAJA;AAKA,MAAA,SAAA,EAAA;AALA,KAAA;AAOA,GAbA;AAcA,EAAA,OAdA,qBAcA;AAAA;;AACA,SAAA,KAAA,CAAA,GAAA,CAAA,mBAAA,EACA,IADA,CACA,UAAA,GAAA,EAAA;AAAA,MAAA,KAAA,CAAA,WAAA,GAAA,GAAA;AAAA,KADA;AAEA,GAjBA;AAkBA,EAAA,OAAA,EAAA;AACA,IAAA,aADA,yBACA,IADA,EACA;AACA,UAAA,IAAA,KAAA,EAAA,IAAA,IAAA,KAAA,SAAA,EAAA;AACA;AACA;AAEA;;;AACA,UAAA,kBAAA,GAAA,KAAA,WAAA,CAAA,IAAA,CAAA,CAAA,EAAA,UAAA,CAAA,MAAA,CAAA,UAAA,IAAA;AAAA,eAAA,IAAA,CAAA,IAAA,CAAA,WAAA,GAAA,OAAA,CAAA,IAAA,CAAA,WAAA,EAAA,IAAA,CAAA,CAAA;AAAA,OAAA,EAAA,KAAA,CAAA,CAAA,EAAA,KAAA,KAAA,CAAA;AACA,UAAA,gBAAA,GAAA,KAAA,WAAA,CAAA,IAAA,CAAA,CAAA,EAAA,SAAA,CAAA,MAAA,CAAA,UAAA,IAAA;AAAA,eAAA,IAAA,CAAA,IAAA,CAAA,WAAA,GAAA,OAAA,CAAA,IAAA,CAAA,WAAA,EAAA,IAAA,CAAA,CAAA;AAAA,OAAA,EAAA,KAAA,CAAA,CAAA,EAAA,KAAA,KAAA,CAAA;AACA,UAAA,YAAA,GAAA,kBAAA,CAAA,MAAA,CAAA,gBAAA,CAAA;AACA,WAAA,eAAA,GAAA,CAAA;AACA,QAAA,IAAA,EAAA;AADA,OAAA,CAAA;AAGA;AAbA;AAlBA,CAAA","sourcesContent":["<template>\n  <b-card-code title=\"Basic\">\n    <vue-autosuggest\n      :suggestions=\"filteredOptions\"\n      :limit=\"10\"\n      :input-props=\"{id:'autosuggest__input',class:'form-control', placeholder:'Do you feel lucky?'}\"\n      @input=\"onInputChange\"\n    >\n      <template slot-scope=\"{suggestion}\">\n        <span class=\"my-suggestion-item\">{{ suggestion.item.name }}</span>\n      </template>\n    </vue-autosuggest>\n\n    <template #code>\n      {{ codeBasic }}\n    </template>\n  </b-card-code>\n</template>\n\n<script>\nimport { VueAutosuggest } from 'vue-autosuggest'\nimport BCardCode from '@core/components/b-card-code/BCardCode.vue'\nimport { codeBasic } from './code'\n\nexport default {\n  components: {\n    VueAutosuggest,\n    BCardCode,\n  },\n  data() {\n    return {\n      datasuggest: [],\n      filteredOptions: [],\n      limit: 10,\n      selected: null,\n      codeBasic,\n    }\n  },\n  created() {\n    this.$http.get('/autosuggest/data')\n      .then(res => { this.datasuggest = res })\n  },\n  methods: {\n    onInputChange(text) {\n      if (text === '' || text === undefined) {\n        return\n      }\n\n      /* Full control over filtering. Maybe fetch from API?! Up to you!!! */\n      const filteredDevelopers = this.datasuggest.data[0].developers.filter(item => item.name.toLowerCase().indexOf(text.toLowerCase()) > -1).slice(0, this.limit)\n      const filteredDesigner = this.datasuggest.data[0].designers.filter(item => item.name.toLowerCase().indexOf(text.toLowerCase()) > -1).slice(0, this.limit)\n      const filteredData = filteredDevelopers.concat(filteredDesigner)\n      this.filteredOptions = [{\n        data: filteredData,\n      }]\n    },\n  },\n}\n</script>\n"],"sourceRoot":"src/views/forms/form-element/autosuggest"}]}