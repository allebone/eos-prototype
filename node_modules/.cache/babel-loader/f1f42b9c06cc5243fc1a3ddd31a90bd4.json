{"remainingRequest":"/home/beskar/eos-prototype-users/node_modules/thread-loader/dist/cjs.js!/home/beskar/eos-prototype-users/node_modules/babel-loader/lib/index.js!/home/beskar/eos-prototype-users/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/beskar/eos-prototype-users/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/beskar/eos-prototype-users/src/views/card/card-analytic/CardAnalyticCustomers.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/beskar/eos-prototype-users/src/views/card/card-analytic/CardAnalyticCustomers.vue","mtime":1609867154633},{"path":"/home/beskar/eos-prototype-users/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/beskar/eos-prototype-users/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/beskar/eos-prototype-users/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/beskar/eos-prototype-users/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/beskar/eos-prototype-users/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgQkNhcmQsIEJDYXJkSGVhZGVyLCBCQ2FyZFRpdGxlLCBCRHJvcGRvd24sIEJEcm9wZG93bkl0ZW0sIEJDYXJkQm9keSB9IGZyb20gJ2Jvb3RzdHJhcC12dWUnOwppbXBvcnQgVnVlQXBleENoYXJ0cyBmcm9tICd2dWUtYXBleGNoYXJ0cyc7CmltcG9ydCB7ICR0aGVtZUNvbG9ycyB9IGZyb20gJ0B0aGVtZUNvbmZpZyc7CmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBCQ2FyZDogQkNhcmQsCiAgICBCQ2FyZEhlYWRlcjogQkNhcmRIZWFkZXIsCiAgICBCQ2FyZFRpdGxlOiBCQ2FyZFRpdGxlLAogICAgQkRyb3Bkb3duOiBCRHJvcGRvd24sCiAgICBCRHJvcGRvd25JdGVtOiBCRHJvcGRvd25JdGVtLAogICAgQkNhcmRCb2R5OiBCQ2FyZEJvZHksCiAgICBWdWVBcGV4Q2hhcnRzOiBWdWVBcGV4Q2hhcnRzCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgY2hhcnREYXRhOiB7fSwKICAgICAgY3VzdG9tZXJzUGllOiB7CiAgICAgICAgc2VyaWVzOiBbNjkwLCAyNTgsIDE0OV0sCiAgICAgICAgY2hhcnRPcHRpb25zOiB7CiAgICAgICAgICBjaGFydDogewogICAgICAgICAgICB0b29sYmFyOiB7CiAgICAgICAgICAgICAgc2hvdzogZmFsc2UKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIGxhYmVsczogWydOZXcnLCAnUmV0dXJuaW5nJywgJ1JlZmVycmFscyddLAogICAgICAgICAgZGF0YUxhYmVsczogewogICAgICAgICAgICBlbmFibGVkOiBmYWxzZQogICAgICAgICAgfSwKICAgICAgICAgIGxlZ2VuZDogewogICAgICAgICAgICBzaG93OiBmYWxzZQogICAgICAgICAgfSwKICAgICAgICAgIHN0cm9rZTogewogICAgICAgICAgICB3aWR0aDogNAogICAgICAgICAgfSwKICAgICAgICAgIGNvbG9yczogWyR0aGVtZUNvbG9ycy5wcmltYXJ5LCAkdGhlbWVDb2xvcnMud2FybmluZywgJHRoZW1lQ29sb3JzLmRhbmdlcl0KICAgICAgICB9CiAgICAgIH0KICAgIH07CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICB0aGlzLiRodHRwLmdldCgnL2NhcmQvY2FyZC1hbmFseXRpY3MvY3VzdG9tZXJzJykudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgIF90aGlzLmNoYXJ0RGF0YSA9IHJlcy5kYXRhOwogICAgfSk7CiAgfQp9Ow=="},{"version":3,"sources":["CardAnalyticCustomers.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0DA,SACA,KADA,EACA,WADA,EACA,UADA,EACA,SADA,EACA,aADA,EACA,SADA,QAEA,eAFA;AAGA,OAAA,aAAA,MAAA,gBAAA;AACA,SAAA,YAAA,QAAA,cAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,KAAA,EAAA,KADA;AAEA,IAAA,WAAA,EAAA,WAFA;AAGA,IAAA,UAAA,EAAA,UAHA;AAIA,IAAA,SAAA,EAAA,SAJA;AAKA,IAAA,aAAA,EAAA,aALA;AAMA,IAAA,SAAA,EAAA,SANA;AAOA,IAAA,aAAA,EAAA;AAPA,GADA;AAUA,EAAA,IAVA,kBAUA;AACA,WAAA;AACA,MAAA,SAAA,EAAA,EADA;AAEA,MAAA,YAAA,EAAA;AACA,QAAA,MAAA,EAAA,CAAA,GAAA,EAAA,GAAA,EAAA,GAAA,CADA;AAEA,QAAA,YAAA,EAAA;AACA,UAAA,KAAA,EAAA;AACA,YAAA,OAAA,EAAA;AACA,cAAA,IAAA,EAAA;AADA;AADA,WADA;AAMA,UAAA,MAAA,EAAA,CAAA,KAAA,EAAA,WAAA,EAAA,WAAA,CANA;AAOA,UAAA,UAAA,EAAA;AACA,YAAA,OAAA,EAAA;AADA,WAPA;AAUA,UAAA,MAAA,EAAA;AAAA,YAAA,IAAA,EAAA;AAAA,WAVA;AAWA,UAAA,MAAA,EAAA;AACA,YAAA,KAAA,EAAA;AADA,WAXA;AAcA,UAAA,MAAA,EAAA,CAAA,YAAA,CAAA,OAAA,EAAA,YAAA,CAAA,OAAA,EAAA,YAAA,CAAA,MAAA;AAdA;AAFA;AAFA,KAAA;AAsBA,GAjCA;AAkCA,EAAA,OAlCA,qBAkCA;AAAA;;AACA,SAAA,KAAA,CAAA,GAAA,CAAA,gCAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AAAA,MAAA,KAAA,CAAA,SAAA,GAAA,GAAA,CAAA,IAAA;AAAA,KAAA;AACA;AApCA,CAAA","sourcesContent":["<template>\n  <b-card no-body>\n    <b-card-header>\n      <b-card-title>Customers</b-card-title>\n      <b-dropdown\n        text=\"Last 7 Days\"\n        variant=\"transparent\"\n        class=\"chart-dropdown \"\n        right\n        no-caret\n        toggle-class=\"p-0 mb-25\"\n        size=\"sm\"\n      >\n        <b-dropdown-item\n          v-for=\"day in chartData.lastDays\"\n          :key=\"day\"\n        >\n          {{ day }}\n        </b-dropdown-item>\n      </b-dropdown>\n    </b-card-header>\n\n    <b-card-body>\n\n      <!-- apex chart -->\n      <vue-apex-charts\n        type=\"pie\"\n        height=\"325\"\n        class=\"mt-2 mb-1\"\n        :options=\"customersPie.chartOptions\"\n        :series=\"customersPie.series\"\n      />\n\n      <!-- list group -->\n      <div class=\"pt-25\">\n        <div\n          v-for=\"(data,index) in chartData.listData\"\n          :key=\"index\"\n          class=\"d-flex justify-content-between\"\n          :class=\"index === Object.keys(chartData.listData).length - 1 ? '':'mb-1'\"\n        >\n          <div class=\"series-info\">\n            <feather-icon\n              :icon=\"data.icon\"\n              size=\"16\"\n              class=\"mr-50\"\n              :class=\"data.iconColor\"\n            />\n            <span class=\"font-weight-bolder\">{{ data.text }}</span>\n          </div>\n          <span>{{ data.result }}</span>\n        </div>\n      </div>\n    </b-card-body>\n  </b-card>\n</template>\n\n<script>\nimport {\n  BCard, BCardHeader, BCardTitle, BDropdown, BDropdownItem, BCardBody,\n} from 'bootstrap-vue'\nimport VueApexCharts from 'vue-apexcharts'\nimport { $themeColors } from '@themeConfig'\n\nexport default {\n  components: {\n    BCard,\n    BCardHeader,\n    BCardTitle,\n    BDropdown,\n    BDropdownItem,\n    BCardBody,\n    VueApexCharts,\n  },\n  data() {\n    return {\n      chartData: {},\n      customersPie: {\n        series: [690, 258, 149],\n        chartOptions: {\n          chart: {\n            toolbar: {\n              show: false,\n            },\n          },\n          labels: ['New', 'Returning', 'Referrals'],\n          dataLabels: {\n            enabled: false,\n          },\n          legend: { show: false },\n          stroke: {\n            width: 4,\n          },\n          colors: [$themeColors.primary, $themeColors.warning, $themeColors.danger],\n        },\n      },\n    }\n  },\n  created() {\n    this.$http.get('/card/card-analytics/customers').then(res => { this.chartData = res.data })\n  },\n}\n</script>\n"],"sourceRoot":"src/views/card/card-analytic"}]}