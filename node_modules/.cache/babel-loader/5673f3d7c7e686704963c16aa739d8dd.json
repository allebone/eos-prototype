{"remainingRequest":"/home/beskar/eos-prototype-users/node_modules/thread-loader/dist/cjs.js!/home/beskar/eos-prototype-users/node_modules/babel-loader/lib/index.js!/home/beskar/eos-prototype-users/node_modules/eslint-loader/index.js??ref--13-0!/home/beskar/eos-prototype-users/src/@core/auth/jwt/jwtService.js","dependencies":[{"path":"/home/beskar/eos-prototype-users/src/@core/auth/jwt/jwtService.js","mtime":1609867154577},{"path":"/home/beskar/eos-prototype-users/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/beskar/eos-prototype-users/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/beskar/eos-prototype-users/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/beskar/eos-prototype-users/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCBfb2JqZWN0U3ByZWFkIGZyb20gIi9ob21lL2Jlc2thci9lb3MtcHJvdG90eXBlLXVzZXJzL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKaW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvaG9tZS9iZXNrYXIvZW9zLXByb3RvdHlwZS11c2Vycy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY2xhc3NDYWxsQ2hlY2siOwppbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20gIi9ob21lL2Jlc2thci9lb3MtcHJvdG90eXBlLXVzZXJzL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVDbGFzcyI7CmltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSAiL2hvbWUvYmVza2FyL2Vvcy1wcm90b3R5cGUtdXNlcnMvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2RlZmluZVByb3BlcnR5IjsKaW1wb3J0IGp3dERlZmF1bHRDb25maWcgZnJvbSAnLi9qd3REZWZhdWx0Q29uZmlnJzsKCnZhciBKd3RTZXJ2aWNlID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICAvLyBXaWxsIGJlIHVzZWQgYnkgdGhpcyBzZXJ2aWNlIGZvciBtYWtpbmcgQVBJIGNhbGxzCiAgLy8gand0Q29uZmlnIDw9IFdpbGwgYmUgdXNlZCBieSB0aGlzIHNlcnZpY2UKICAvLyBGb3IgUmVmcmVzaGluZyBUb2tlbgogIC8vIEZvciBSZWZyZXNoaW5nIFRva2VuCiAgZnVuY3Rpb24gSnd0U2VydmljZShheGlvc0lucywgand0T3ZlcnJpZGVDb25maWcpIHsKICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEp3dFNlcnZpY2UpOwoKICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCAiYXhpb3NJbnMiLCBudWxsKTsKCiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgImp3dENvbmZpZyIsIF9vYmplY3RTcHJlYWQoe30sIGp3dERlZmF1bHRDb25maWcpKTsKCiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgImlzQWxyZWFkeUZldGNoaW5nQWNjZXNzVG9rZW4iLCBmYWxzZSk7CgogICAgX2RlZmluZVByb3BlcnR5KHRoaXMsICJzdWJzY3JpYmVycyIsIFtdKTsKCiAgICB0aGlzLmF4aW9zSW5zID0gYXhpb3NJbnM7CiAgICB0aGlzLmp3dENvbmZpZyA9IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgdGhpcy5qd3RDb25maWcpLCBqd3RPdmVycmlkZUNvbmZpZyk7IC8vIFJlcXVlc3QgSW50ZXJjZXB0b3IKCiAgICB0aGlzLmF4aW9zSW5zLmludGVyY2VwdG9ycy5yZXF1ZXN0LnVzZShmdW5jdGlvbiAoY29uZmlnKSB7CiAgICAgIC8vIEdldCB0b2tlbiBmcm9tIGxvY2FsU3RvcmFnZQogICAgICB2YXIgYWNjZXNzVG9rZW4gPSBfdGhpcy5nZXRUb2tlbigpOyAvLyBJZiB0b2tlbiBpcyBwcmVzZW50IGFkZCBpdCB0byByZXF1ZXN0J3MgQXV0aG9yaXphdGlvbiBIZWFkZXIKCgogICAgICBpZiAoYWNjZXNzVG9rZW4pIHsKICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ24KICAgICAgICBjb25maWcuaGVhZGVycy5BdXRob3JpemF0aW9uID0gIiIuY29uY2F0KF90aGlzLmp3dENvbmZpZy50b2tlblR5cGUsICIgIikuY29uY2F0KGFjY2Vzc1Rva2VuKTsKICAgICAgfQoKICAgICAgcmV0dXJuIGNvbmZpZzsKICAgIH0sIGZ1bmN0aW9uIChlcnJvcikgewogICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyb3IpOwogICAgfSk7IC8vIEFkZCByZXF1ZXN0L3Jlc3BvbnNlIGludGVyY2VwdG9yCgogICAgdGhpcy5heGlvc0lucy5pbnRlcmNlcHRvcnMucmVzcG9uc2UudXNlKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICByZXR1cm4gcmVzcG9uc2U7CiAgICB9LCBmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgLy8gY29uc3QgeyBjb25maWcsIHJlc3BvbnNlOiB7IHN0YXR1cyB9IH0gPSBlcnJvcgogICAgICB2YXIgY29uZmlnID0gZXJyb3IuY29uZmlnLAogICAgICAgICAgcmVzcG9uc2UgPSBlcnJvci5yZXNwb25zZTsKICAgICAgdmFyIG9yaWdpbmFsUmVxdWVzdCA9IGNvbmZpZzsgLy8gaWYgKHN0YXR1cyA9PT0gNDAxKSB7CgogICAgICBpZiAocmVzcG9uc2UgJiYgcmVzcG9uc2Uuc3RhdHVzID09PSA0MDEpIHsKICAgICAgICBpZiAoIV90aGlzLmlzQWxyZWFkeUZldGNoaW5nQWNjZXNzVG9rZW4pIHsKICAgICAgICAgIF90aGlzLmlzQWxyZWFkeUZldGNoaW5nQWNjZXNzVG9rZW4gPSB0cnVlOwoKICAgICAgICAgIF90aGlzLnJlZnJlc2hUb2tlbigpLnRoZW4oZnVuY3Rpb24gKHIpIHsKICAgICAgICAgICAgX3RoaXMuaXNBbHJlYWR5RmV0Y2hpbmdBY2Nlc3NUb2tlbiA9IGZhbHNlOyAvLyBVcGRhdGUgYWNjZXNzVG9rZW4gaW4gbG9jYWxTdG9yYWdlCgogICAgICAgICAgICBfdGhpcy5zZXRUb2tlbihyLmRhdGEuYWNjZXNzVG9rZW4pOwoKICAgICAgICAgICAgX3RoaXMuc2V0UmVmcmVzaFRva2VuKHIuZGF0YS5yZWZyZXNoVG9rZW4pOwoKICAgICAgICAgICAgX3RoaXMub25BY2Nlc3NUb2tlbkZldGNoZWQoci5kYXRhLmFjY2Vzc1Rva2VuKTsKICAgICAgICAgIH0pOwogICAgICAgIH0KCiAgICAgICAgdmFyIHJldHJ5T3JpZ2luYWxSZXF1ZXN0ID0gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUpIHsKICAgICAgICAgIF90aGlzLmFkZFN1YnNjcmliZXIoZnVuY3Rpb24gKGFjY2Vzc1Rva2VuKSB7CiAgICAgICAgICAgIC8vIE1ha2Ugc3VyZSB0byBhc3NpZ24gYWNjZXNzVG9rZW4gYWNjb3JkaW5nIHRvIHlvdXIgcmVzcG9uc2UuCiAgICAgICAgICAgIC8vIENoZWNrOiBodHRwczovL3BpeGludmVudC50aWNrc3kuY29tL3RpY2tldC8yNDEzODcwCiAgICAgICAgICAgIC8vIENoYW5nZSBBdXRob3JpemF0aW9uIGhlYWRlcgogICAgICAgICAgICBvcmlnaW5hbFJlcXVlc3QuaGVhZGVycy5BdXRob3JpemF0aW9uID0gIiIuY29uY2F0KF90aGlzLmp3dENvbmZpZy50b2tlblR5cGUsICIgIikuY29uY2F0KGFjY2Vzc1Rva2VuKTsKICAgICAgICAgICAgcmVzb2x2ZShfdGhpcy5heGlvc0lucyhvcmlnaW5hbFJlcXVlc3QpKTsKICAgICAgICAgIH0pOwogICAgICAgIH0pOwogICAgICAgIHJldHVybiByZXRyeU9yaWdpbmFsUmVxdWVzdDsKICAgICAgfQoKICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTsKICAgIH0pOwogIH0KCiAgX2NyZWF0ZUNsYXNzKEp3dFNlcnZpY2UsIFt7CiAgICBrZXk6ICJvbkFjY2Vzc1Rva2VuRmV0Y2hlZCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gb25BY2Nlc3NUb2tlbkZldGNoZWQoYWNjZXNzVG9rZW4pIHsKICAgICAgdGhpcy5zdWJzY3JpYmVycyA9IHRoaXMuc3Vic2NyaWJlcnMuZmlsdGVyKGZ1bmN0aW9uIChjYWxsYmFjaykgewogICAgICAgIHJldHVybiBjYWxsYmFjayhhY2Nlc3NUb2tlbik7CiAgICAgIH0pOwogICAgfQogIH0sIHsKICAgIGtleTogImFkZFN1YnNjcmliZXIiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGFkZFN1YnNjcmliZXIoY2FsbGJhY2spIHsKICAgICAgdGhpcy5zdWJzY3JpYmVycy5wdXNoKGNhbGxiYWNrKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJnZXRUb2tlbiIsCiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0VG9rZW4oKSB7CiAgICAgIHJldHVybiBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSh0aGlzLmp3dENvbmZpZy5zdG9yYWdlVG9rZW5LZXlOYW1lKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJnZXRSZWZyZXNoVG9rZW4iLAogICAgdmFsdWU6IGZ1bmN0aW9uIGdldFJlZnJlc2hUb2tlbigpIHsKICAgICAgcmV0dXJuIGxvY2FsU3RvcmFnZS5nZXRJdGVtKHRoaXMuand0Q29uZmlnLnN0b3JhZ2VSZWZyZXNoVG9rZW5LZXlOYW1lKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJzZXRUb2tlbiIsCiAgICB2YWx1ZTogZnVuY3Rpb24gc2V0VG9rZW4odmFsdWUpIHsKICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0odGhpcy5qd3RDb25maWcuc3RvcmFnZVRva2VuS2V5TmFtZSwgdmFsdWUpOwogICAgfQogIH0sIHsKICAgIGtleTogInNldFJlZnJlc2hUb2tlbiIsCiAgICB2YWx1ZTogZnVuY3Rpb24gc2V0UmVmcmVzaFRva2VuKHZhbHVlKSB7CiAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKHRoaXMuand0Q29uZmlnLnN0b3JhZ2VSZWZyZXNoVG9rZW5LZXlOYW1lLCB2YWx1ZSk7CiAgICB9CiAgfSwgewogICAga2V5OiAibG9naW4iLAogICAgdmFsdWU6IGZ1bmN0aW9uIGxvZ2luKCkgewogICAgICB2YXIgX3RoaXMkYXhpb3NJbnM7CgogICAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHsKICAgICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldOwogICAgICB9CgogICAgICByZXR1cm4gKF90aGlzJGF4aW9zSW5zID0gdGhpcy5heGlvc0lucykucG9zdC5hcHBseShfdGhpcyRheGlvc0lucywgW3RoaXMuand0Q29uZmlnLmxvZ2luRW5kcG9pbnRdLmNvbmNhdChhcmdzKSk7CiAgICB9CiAgfSwgewogICAga2V5OiAicmVnaXN0ZXIiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHJlZ2lzdGVyKCkgewogICAgICB2YXIgX3RoaXMkYXhpb3NJbnMyOwoKICAgICAgZm9yICh2YXIgX2xlbjIgPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4yKSwgX2tleTIgPSAwOyBfa2V5MiA8IF9sZW4yOyBfa2V5MisrKSB7CiAgICAgICAgYXJnc1tfa2V5Ml0gPSBhcmd1bWVudHNbX2tleTJdOwogICAgICB9CgogICAgICByZXR1cm4gKF90aGlzJGF4aW9zSW5zMiA9IHRoaXMuYXhpb3NJbnMpLnBvc3QuYXBwbHkoX3RoaXMkYXhpb3NJbnMyLCBbdGhpcy5qd3RDb25maWcucmVnaXN0ZXJFbmRwb2ludF0uY29uY2F0KGFyZ3MpKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJyZWZyZXNoVG9rZW4iLAogICAgdmFsdWU6IGZ1bmN0aW9uIHJlZnJlc2hUb2tlbigpIHsKICAgICAgcmV0dXJuIHRoaXMuYXhpb3NJbnMucG9zdCh0aGlzLmp3dENvbmZpZy5yZWZyZXNoRW5kcG9pbnQsIHsKICAgICAgICByZWZyZXNoVG9rZW46IHRoaXMuZ2V0UmVmcmVzaFRva2VuKCkKICAgICAgfSk7CiAgICB9CiAgfV0pOwoKICByZXR1cm4gSnd0U2VydmljZTsKfSgpOwoKZXhwb3J0IHsgSnd0U2VydmljZSBhcyBkZWZhdWx0IH07"},{"version":3,"sources":["/home/beskar/eos-prototype-users/src/@core/auth/jwt/jwtService.js"],"names":["jwtDefaultConfig","JwtService","axiosIns","jwtOverrideConfig","jwtConfig","interceptors","request","use","config","accessToken","getToken","headers","Authorization","tokenType","error","Promise","reject","response","originalRequest","status","isAlreadyFetchingAccessToken","refreshToken","then","r","setToken","data","setRefreshToken","onAccessTokenFetched","retryOriginalRequest","resolve","addSubscriber","subscribers","filter","callback","push","localStorage","getItem","storageTokenKeyName","storageRefreshTokenKeyName","value","setItem","args","post","loginEndpoint","registerEndpoint","refreshEndpoint","getRefreshToken"],"mappings":"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","sourcesContent":["import jwtDefaultConfig from './jwtDefaultConfig'\n\nexport default class JwtService {\n  // Will be used by this service for making API calls\n  axiosIns = null\n\n  // jwtConfig <= Will be used by this service\n  jwtConfig = { ...jwtDefaultConfig }\n\n  // For Refreshing Token\n  isAlreadyFetchingAccessToken = false\n\n  // For Refreshing Token\n  subscribers = []\n\n  constructor(axiosIns, jwtOverrideConfig) {\n    this.axiosIns = axiosIns\n    this.jwtConfig = { ...this.jwtConfig, ...jwtOverrideConfig }\n\n    // Request Interceptor\n    this.axiosIns.interceptors.request.use(\n      config => {\n        // Get token from localStorage\n        const accessToken = this.getToken()\n\n        // If token is present add it to request's Authorization Header\n        if (accessToken) {\n          // eslint-disable-next-line no-param-reassign\n          config.headers.Authorization = `${this.jwtConfig.tokenType} ${accessToken}`\n        }\n        return config\n      },\n      error => Promise.reject(error),\n    )\n\n    // Add request/response interceptor\n    this.axiosIns.interceptors.response.use(\n      response => response,\n      error => {\n        // const { config, response: { status } } = error\n        const { config, response } = error\n        const originalRequest = config\n\n        // if (status === 401) {\n        if (response && response.status === 401) {\n          if (!this.isAlreadyFetchingAccessToken) {\n            this.isAlreadyFetchingAccessToken = true\n            this.refreshToken().then(r => {\n              this.isAlreadyFetchingAccessToken = false\n\n              // Update accessToken in localStorage\n              this.setToken(r.data.accessToken)\n              this.setRefreshToken(r.data.refreshToken)\n\n              this.onAccessTokenFetched(r.data.accessToken)\n            })\n          }\n          const retryOriginalRequest = new Promise(resolve => {\n            this.addSubscriber(accessToken => {\n              // Make sure to assign accessToken according to your response.\n              // Check: https://pixinvent.ticksy.com/ticket/2413870\n              // Change Authorization header\n              originalRequest.headers.Authorization = `${this.jwtConfig.tokenType} ${accessToken}`\n              resolve(this.axiosIns(originalRequest))\n            })\n          })\n          return retryOriginalRequest\n        }\n        return Promise.reject(error)\n      },\n    )\n  }\n\n  onAccessTokenFetched(accessToken) {\n    this.subscribers = this.subscribers.filter(callback => callback(accessToken))\n  }\n\n  addSubscriber(callback) {\n    this.subscribers.push(callback)\n  }\n\n  getToken() {\n    return localStorage.getItem(this.jwtConfig.storageTokenKeyName)\n  }\n\n  getRefreshToken() {\n    return localStorage.getItem(this.jwtConfig.storageRefreshTokenKeyName)\n  }\n\n  setToken(value) {\n    localStorage.setItem(this.jwtConfig.storageTokenKeyName, value)\n  }\n\n  setRefreshToken(value) {\n    localStorage.setItem(this.jwtConfig.storageRefreshTokenKeyName, value)\n  }\n\n  login(...args) {\n    return this.axiosIns.post(this.jwtConfig.loginEndpoint, ...args)\n  }\n\n  register(...args) {\n    return this.axiosIns.post(this.jwtConfig.registerEndpoint, ...args)\n  }\n\n  refreshToken() {\n    return this.axiosIns.post(this.jwtConfig.refreshEndpoint, {\n      refreshToken: this.getRefreshToken(),\n    })\n  }\n}\n"]}]}