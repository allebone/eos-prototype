{"remainingRequest":"/home/beskar/eos-prototype-users/node_modules/thread-loader/dist/cjs.js!/home/beskar/eos-prototype-users/node_modules/babel-loader/lib/index.js!/home/beskar/eos-prototype-users/node_modules/eslint-loader/index.js??ref--13-0!/home/beskar/eos-prototype-users/src/views/apps/todo/useTaskHandler.js","dependencies":[{"path":"/home/beskar/eos-prototype-users/src/views/apps/todo/useTaskHandler.js","mtime":1609867154633},{"path":"/home/beskar/eos-prototype-users/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/beskar/eos-prototype-users/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/beskar/eos-prototype-users/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/beskar/eos-prototype-users/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaW5jbHVkZXMuanMiOwppbXBvcnQgeyByZWYsIHdhdGNoIH0gZnJvbSAnQHZ1ZS9jb21wb3NpdGlvbi1hcGknOyAvLyBpbXBvcnQgc3RvcmUgZnJvbSAnQC9zdG9yZScKCmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHVzZVRhc2tIYW5kbGVyKHByb3BzLCBlbWl0KSB7CiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgLy8gdGFza0xvY2FsCiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgdmFyIHRhc2tMb2NhbCA9IHJlZihKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHByb3BzLnRhc2sudmFsdWUpKSk7CgogIHZhciByZXNldFRhc2tMb2NhbCA9IGZ1bmN0aW9uIHJlc2V0VGFza0xvY2FsKCkgewogICAgdGFza0xvY2FsLnZhbHVlID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShwcm9wcy50YXNrLnZhbHVlKSk7CiAgfTsKCiAgd2F0Y2gocHJvcHMudGFzaywgZnVuY3Rpb24gKCkgewogICAgcmVzZXRUYXNrTG9jYWwoKTsKICB9KTsgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgLy8gaXNFdmVudEhhbmRsZXJTaWRlYmFyQWN0aXZlCiAgLy8gKiBDbGVhciBmb3JtIGlmIHNpZGViYXIgaXMgY2xvc2VkCiAgLy8gISBXZSBjYW4gaGlkZSBpdCB1c2luZyBAaGlkZGVuIGV2ZW50CiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgLy8gd2F0Y2gocHJvcHMuaXNFdmVudEhhbmRsZXJTaWRlYmFyQWN0aXZlLCB2YWwgPT4gewogIC8vICAgLy8gPyBEb24ndCByZXNldCBldmVudCB0aWxsIHRyYW5zaXRpb24gaXMgZmluaXNoZWQKICAvLyAgIGlmICghdmFsKSB7CiAgLy8gICAgIHNldFRpbWVvdXQoKCkgPT4gewogIC8vICAgICAgIGNsZWFyRm9ybS52YWx1ZSgpCiAgLy8gICAgIH0sIDM1MCkKICAvLyAgIH0KICAvLyB9KQoKICB2YXIgb25TdWJtaXQgPSBmdW5jdGlvbiBvblN1Ym1pdCgpIHsKICAgIHZhciB0YXNrRGF0YSA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkodGFza0xvY2FsKSk7IC8vICogSWYgZXZlbnQgaGFzIGlkID0+IEVkaXQgRXZlbnQKICAgIC8vIEVtaXQgZXZlbnQgZm9yIGFkZC91cGRhdGUgZXZlbnQKCiAgICBpZiAocHJvcHMudGFzay52YWx1ZS5pZCkgZW1pdCgndXBkYXRlLXRhc2snLCB0YXNrRGF0YS52YWx1ZSk7ZWxzZSBlbWl0KCdhZGQtdGFzaycsIHRhc2tEYXRhLnZhbHVlKTsgLy8gQ2xvc2Ugc2lkZWJhcgoKICAgIGVtaXQoJ3VwZGF0ZTppcy10YXNrLWhhbmRsZXItc2lkZWJhci1hY3RpdmUnLCBmYWxzZSk7CiAgfTsgLy8gKj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09LS0tKgogIC8vICotLS0tLS0tLS0gVUkgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKgogIC8vICo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PS0tLSoKICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAvLyBndWVzdE9wdGlvbnMKICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KCiAgLyogZXNsaW50LWRpc2FibGUgZ2xvYmFsLXJlcXVpcmUgKi8KCgogIHZhciBhc3NpZ25lZU9wdGlvbnMgPSBbewogICAgYXZhdGFyOiByZXF1aXJlKCdAL2Fzc2V0cy9pbWFnZXMvYXZhdGFycy8xLXNtYWxsLnBuZycpLAogICAgZnVsbE5hbWU6ICdKYW5lIEZvc3RlcicKICB9LCB7CiAgICBhdmF0YXI6IHJlcXVpcmUoJ0AvYXNzZXRzL2ltYWdlcy9hdmF0YXJzLzMtc21hbGwucG5nJyksCiAgICBmdWxsTmFtZTogJ0Rvbm5hIEZyYW5rJwogIH0sIHsKICAgIGF2YXRhcjogcmVxdWlyZSgnQC9hc3NldHMvaW1hZ2VzL2F2YXRhcnMvNS1zbWFsbC5wbmcnKSwKICAgIGZ1bGxOYW1lOiAnR2FicmllbGxlIFJvYmVydHNvbicKICB9LCB7CiAgICBhdmF0YXI6IHJlcXVpcmUoJ0AvYXNzZXRzL2ltYWdlcy9hdmF0YXJzLzctc21hbGwucG5nJyksCiAgICBmdWxsTmFtZTogJ0xvcmkgU3BlYXJzJwogIH0sIHsKICAgIGF2YXRhcjogcmVxdWlyZSgnQC9hc3NldHMvaW1hZ2VzL2F2YXRhcnMvOS1zbWFsbC5wbmcnKSwKICAgIGZ1bGxOYW1lOiAnU2FuZHkgVmVnYScKICB9LCB7CiAgICBhdmF0YXI6IHJlcXVpcmUoJ0AvYXNzZXRzL2ltYWdlcy9hdmF0YXJzLzExLXNtYWxsLnBuZycpLAogICAgZnVsbE5hbWU6ICdDaGVyeWwgTWF5JwogIH1dOwogIC8qIGVzbGludC1lbmFibGUgZ2xvYmFsLXJlcXVpcmUgKi8KCiAgdmFyIHJlc29sdmVBdmF0YXJWYXJpYW50ID0gZnVuY3Rpb24gcmVzb2x2ZUF2YXRhclZhcmlhbnQodGFncykgewogICAgaWYgKHRhZ3MuaW5jbHVkZXMoJ2hpZ2gnKSkgcmV0dXJuICdwcmltYXJ5JzsKICAgIGlmICh0YWdzLmluY2x1ZGVzKCdtZWRpdW0nKSkgcmV0dXJuICd3YXJuaW5nJzsKICAgIGlmICh0YWdzLmluY2x1ZGVzKCdsb3cnKSkgcmV0dXJuICdzdWNjZXNzJzsKICAgIGlmICh0YWdzLmluY2x1ZGVzKCd1cGRhdGUnKSkgcmV0dXJuICdkYW5nZXInOwogICAgaWYgKHRhZ3MuaW5jbHVkZXMoJ3RlYW0nKSkgcmV0dXJuICdpbmZvJzsKICAgIHJldHVybiAncHJpbWFyeSc7CiAgfTsKCiAgdmFyIHRhZ09wdGlvbnMgPSBbewogICAgbGFiZWw6ICdUZWFtJywKICAgIHZhbHVlOiAndGVhbScKICB9LCB7CiAgICBsYWJlbDogJ0xvdycsCiAgICB2YWx1ZTogJ2xvdycKICB9LCB7CiAgICBsYWJlbDogJ01lZGl1bScsCiAgICB2YWx1ZTogJ21lZGl1bScKICB9LCB7CiAgICBsYWJlbDogJ0hpZ2gnLAogICAgdmFsdWU6ICdoaWdoJwogIH0sIHsKICAgIGxhYmVsOiAnVXBkYXRlJywKICAgIHZhbHVlOiAndXBkYXRlJwogIH1dOwogIHJldHVybiB7CiAgICB0YXNrTG9jYWw6IHRhc2tMb2NhbCwKICAgIHJlc2V0VGFza0xvY2FsOiByZXNldFRhc2tMb2NhbCwKICAgIC8vIFVJCiAgICBhc3NpZ25lZU9wdGlvbnM6IGFzc2lnbmVlT3B0aW9ucywKICAgIHJlc29sdmVBdmF0YXJWYXJpYW50OiByZXNvbHZlQXZhdGFyVmFyaWFudCwKICAgIHRhZ09wdGlvbnM6IHRhZ09wdGlvbnMsCiAgICBvblN1Ym1pdDogb25TdWJtaXQKICB9Owp9"},{"version":3,"sources":["/home/beskar/eos-prototype-users/src/views/apps/todo/useTaskHandler.js"],"names":["ref","watch","useTaskHandler","props","emit","taskLocal","JSON","parse","stringify","task","value","resetTaskLocal","onSubmit","taskData","id","assigneeOptions","avatar","require","fullName","resolveAvatarVariant","tags","includes","tagOptions","label"],"mappings":"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","sourcesContent":["import { ref, watch } from '@vue/composition-api'\n// import store from '@/store'\n\nexport default function useTaskHandler(props, emit) {\n  // ------------------------------------------------\n  // taskLocal\n  // ------------------------------------------------\n  const taskLocal = ref(JSON.parse(JSON.stringify(props.task.value)))\n  const resetTaskLocal = () => {\n    taskLocal.value = JSON.parse(JSON.stringify(props.task.value))\n  }\n  watch(props.task, () => {\n    resetTaskLocal()\n  })\n\n  // ------------------------------------------------\n  // isEventHandlerSidebarActive\n  // * Clear form if sidebar is closed\n  // ! We can hide it using @hidden event\n  // ------------------------------------------------\n  // watch(props.isEventHandlerSidebarActive, val => {\n  //   // ? Don't reset event till transition is finished\n  //   if (!val) {\n  //     setTimeout(() => {\n  //       clearForm.value()\n  //     }, 350)\n  //   }\n  // })\n\n  const onSubmit = () => {\n    const taskData = JSON.parse(JSON.stringify(taskLocal))\n\n    // * If event has id => Edit Event\n    // Emit event for add/update event\n    if (props.task.value.id) emit('update-task', taskData.value)\n    else emit('add-task', taskData.value)\n\n    // Close sidebar\n    emit('update:is-task-handler-sidebar-active', false)\n  }\n\n  // *===============================================---*\n  // *--------- UI ---------------------------------------*\n  // *===============================================---*\n\n  // ------------------------------------------------\n  // guestOptions\n  // ------------------------------------------------\n\n  /* eslint-disable global-require */\n  const assigneeOptions = [\n    { avatar: require('@/assets/images/avatars/1-small.png'), fullName: 'Jane Foster' },\n    { avatar: require('@/assets/images/avatars/3-small.png'), fullName: 'Donna Frank' },\n    { avatar: require('@/assets/images/avatars/5-small.png'), fullName: 'Gabrielle Robertson' },\n    { avatar: require('@/assets/images/avatars/7-small.png'), fullName: 'Lori Spears' },\n    { avatar: require('@/assets/images/avatars/9-small.png'), fullName: 'Sandy Vega' },\n    { avatar: require('@/assets/images/avatars/11-small.png'), fullName: 'Cheryl May' },\n  ]\n  /* eslint-enable global-require */\n\n  const resolveAvatarVariant = tags => {\n    if (tags.includes('high')) return 'primary'\n    if (tags.includes('medium')) return 'warning'\n    if (tags.includes('low')) return 'success'\n    if (tags.includes('update')) return 'danger'\n    if (tags.includes('team')) return 'info'\n    return 'primary'\n  }\n\n  const tagOptions = [\n    { label: 'Team', value: 'team' },\n    { label: 'Low', value: 'low' },\n    { label: 'Medium', value: 'medium' },\n    { label: 'High', value: 'high' },\n    { label: 'Update', value: 'update' },\n  ]\n\n  return {\n    taskLocal,\n    resetTaskLocal,\n\n    // UI\n    assigneeOptions,\n    resolveAvatarVariant,\n    tagOptions,\n    onSubmit,\n  }\n}\n"]}]}