{"remainingRequest":"/home/beskar/eos-prototype-users/node_modules/thread-loader/dist/cjs.js!/home/beskar/eos-prototype-users/node_modules/babel-loader/lib/index.js!/home/beskar/eos-prototype-users/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/beskar/eos-prototype-users/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/beskar/eos-prototype-users/src/@core/components/statistics-cards/StatisticCardWithLineChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/beskar/eos-prototype-users/src/@core/components/statistics-cards/StatisticCardWithLineChart.vue","mtime":1609867154581},{"path":"/home/beskar/eos-prototype-users/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/beskar/eos-prototype-users/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/beskar/eos-prototype-users/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/beskar/eos-prototype-users/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/beskar/eos-prototype-users/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsbC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci5jb25zdHJ1Y3Rvci5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCB7IEJDYXJkLCBCQ2FyZEJvZHksIEJBdmF0YXIgfSBmcm9tICdib290c3RyYXAtdnVlJzsKaW1wb3J0IFZ1ZUFwZXhDaGFydHMgZnJvbSAndnVlLWFwZXhjaGFydHMnOwppbXBvcnQgeyAkdGhlbWVDb2xvcnMgfSBmcm9tICdAdGhlbWVDb25maWcnOwppbXBvcnQgeyBsaW5lQ2hhcnRPcHRpb25zIH0gZnJvbSAnLi9jaGFydE9wdGlvbnMnOwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgVnVlQXBleENoYXJ0czogVnVlQXBleENoYXJ0cywKICAgIEJDYXJkOiBCQ2FyZCwKICAgIEJDYXJkQm9keTogQkNhcmRCb2R5LAogICAgQkF2YXRhcjogQkF2YXRhcgogIH0sCiAgcHJvcHM6IHsKICAgIGljb246IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICByZXF1aXJlZDogdHJ1ZQogICAgfSwKICAgIHN0YXRpc3RpYzogewogICAgICB0eXBlOiBbTnVtYmVyLCBTdHJpbmddLAogICAgICByZXF1aXJlZDogdHJ1ZQogICAgfSwKICAgIHN0YXRpc3RpY1RpdGxlOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgImRlZmF1bHQiOiAnJwogICAgfSwKICAgIGNvbG9yOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgImRlZmF1bHQiOiAncHJpbWFyeScKICAgIH0sCiAgICBjaGFydERhdGE6IHsKICAgICAgdHlwZTogQXJyYXksCiAgICAgICJkZWZhdWx0IjogZnVuY3Rpb24gX2RlZmF1bHQoKSB7CiAgICAgICAgcmV0dXJuIFtdOwogICAgICB9CiAgICB9LAogICAgY2hhcnRPcHRpb25zOiB7CiAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgImRlZmF1bHQiOiBudWxsCiAgICB9CiAgfSwKICBjb21wdXRlZDogewogICAgY2hhcnRPcHRpb25zQ29tcHV0ZWQ6IGZ1bmN0aW9uIGNoYXJ0T3B0aW9uc0NvbXB1dGVkKCkgewogICAgICBpZiAodGhpcy5jaGFydE9wdGlvbnMgPT09IG51bGwpIHsKICAgICAgICB2YXIgb3B0aW9ucyA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkobGluZUNoYXJ0T3B0aW9ucykpOwogICAgICAgIG9wdGlvbnMuZmlsbC5ncmFkaWVudC5ncmFkaWVudFRvQ29sb3JzID0gW3RoaXMuZ3JhZGllbnRUb0NvbG9yKHRoaXMuY29sb3IpXTsKICAgICAgICBvcHRpb25zLmNvbG9ycyA9IFskdGhlbWVDb2xvcnNbdGhpcy5jb2xvcl1dOwogICAgICAgIHJldHVybiBvcHRpb25zOwogICAgICB9CgogICAgICByZXR1cm4gdGhpcy5jaGFydE9wdGlvbnM7CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBncmFkaWVudFRvQ29sb3I6IGZ1bmN0aW9uIGdyYWRpZW50VG9Db2xvcihjb2xvcikgewogICAgICB2YXIgZ3JhZGllbnRUb0NvbG9ycyA9IHsKICAgICAgICBwcmltYXJ5OiAnI0E5QTJGNicsCiAgICAgICAgc3VjY2VzczogJyM1NUREOTInLAogICAgICAgIHdhcm5pbmc6ICcjZmZjMDg1JywKICAgICAgICBkYW5nZXI6ICcjRjk3Nzk0JywKICAgICAgICBpbmZvOiAnIzU5RTBGMCcsCiAgICAgICAgc2Vjb25kYXJ5OiAnI0I0QjlCRicsCiAgICAgICAgbGlnaHQ6ICcjRDBENERCJywKICAgICAgICBkYXJrOiAnIzkxOTE5MScKICAgICAgfTsKICAgICAgcmV0dXJuIGdyYWRpZW50VG9Db2xvcnNbY29sb3JdOwogICAgfQogIH0KfTs="},{"version":3,"sources":["StatisticCardWithLineChart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA,SAAA,KAAA,EAAA,SAAA,EAAA,OAAA,QAAA,eAAA;AACA,OAAA,aAAA,MAAA,gBAAA;AACA,SAAA,YAAA,QAAA,cAAA;AACA,SAAA,gBAAA,QAAA,gBAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,aAAA,EAAA,aADA;AAEA,IAAA,KAAA,EAAA,KAFA;AAGA,IAAA,SAAA,EAAA,SAHA;AAIA,IAAA,OAAA,EAAA;AAJA,GADA;AAOA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA,KADA;AAKA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,CAAA,MAAA,EAAA,MAAA,CADA;AAEA,MAAA,QAAA,EAAA;AAFA,KALA;AASA,IAAA,cAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,iBAAA;AAFA,KATA;AAaA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,iBAAA;AAFA,KAbA;AAiBA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,iBAAA;AAAA,eAAA,EAAA;AAAA;AAFA,KAjBA;AAqBA,IAAA,YAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,iBAAA;AAFA;AArBA,GAPA;AAiCA,EAAA,QAAA,EAAA;AACA,IAAA,oBADA,kCACA;AACA,UAAA,KAAA,YAAA,KAAA,IAAA,EAAA;AACA,YAAA,OAAA,GAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,SAAA,CAAA,gBAAA,CAAA,CAAA;AAEA,QAAA,OAAA,CAAA,IAAA,CAAA,QAAA,CAAA,gBAAA,GAAA,CAAA,KAAA,eAAA,CAAA,KAAA,KAAA,CAAA,CAAA;AACA,QAAA,OAAA,CAAA,MAAA,GAAA,CAAA,YAAA,CAAA,KAAA,KAAA,CAAA,CAAA;AAEA,eAAA,OAAA;AACA;;AACA,aAAA,KAAA,YAAA;AACA;AAXA,GAjCA;AA8CA,EAAA,OAAA,EAAA;AACA,IAAA,eADA,2BACA,KADA,EACA;AACA,UAAA,gBAAA,GAAA;AACA,QAAA,OAAA,EAAA,SADA;AAEA,QAAA,OAAA,EAAA,SAFA;AAGA,QAAA,OAAA,EAAA,SAHA;AAIA,QAAA,MAAA,EAAA,SAJA;AAKA,QAAA,IAAA,EAAA,SALA;AAMA,QAAA,SAAA,EAAA,SANA;AAOA,QAAA,KAAA,EAAA,SAPA;AAQA,QAAA,IAAA,EAAA;AARA,OAAA;AAWA,aAAA,gBAAA,CAAA,KAAA,CAAA;AACA;AAdA;AA9CA,CAAA","sourcesContent":["<template>\n  <b-card no-body>\n    <b-card-body class=\"d-flex justify-content-between align-items-center pb-0\">\n      <div class=\"truncate\">\n        <h2 class=\"font-weight-bolder\">\n          {{ statistic }}\n        </h2>\n        <span>{{ statisticTitle }}</span>\n      </div>\n      <b-avatar\n        :variant=\"`light-${color}`\"\n        size=\"45\"\n      >\n        <feather-icon\n          size=\"21\"\n          :icon=\"icon\"\n        />\n      </b-avatar>\n    </b-card-body>\n\n    <vue-apex-charts\n      type=\"line\"\n      height=\"100\"\n      width=\"100%\"\n      :options=\"chartOptionsComputed\"\n      :series=\"chartData\"\n    />\n\n  </b-card>\n</template>\n\n<script>\nimport { BCard, BCardBody, BAvatar } from 'bootstrap-vue'\nimport VueApexCharts from 'vue-apexcharts'\nimport { $themeColors } from '@themeConfig'\nimport { lineChartOptions } from './chartOptions'\n\nexport default {\n  components: {\n    VueApexCharts,\n    BCard,\n    BCardBody,\n    BAvatar,\n  },\n  props: {\n    icon: {\n      type: String,\n      required: true,\n    },\n    statistic: {\n      type: [Number, String],\n      required: true,\n    },\n    statisticTitle: {\n      type: String,\n      default: '',\n    },\n    color: {\n      type: String,\n      default: 'primary',\n    },\n    chartData: {\n      type: Array,\n      default: () => [],\n    },\n    chartOptions: {\n      type: Object,\n      default: null,\n    },\n  },\n  computed: {\n    chartOptionsComputed() {\n      if (this.chartOptions === null) {\n        const options = JSON.parse(JSON.stringify(lineChartOptions))\n\n        options.fill.gradient.gradientToColors = [this.gradientToColor(this.color)]\n        options.colors = [$themeColors[this.color]]\n\n        return options\n      }\n      return this.chartOptions\n    },\n  },\n  methods: {\n    gradientToColor(color) {\n      const gradientToColors = {\n        primary: '#A9A2F6',\n        success: '#55DD92',\n        warning: '#ffc085',\n        danger: '#F97794',\n        info: '#59E0F0',\n        secondary: '#B4B9BF',\n        light: '#D0D4DB',\n        dark: '#919191',\n      }\n\n      return gradientToColors[color]\n    },\n  },\n}\n</script>\n"],"sourceRoot":"src/@core/components/statistics-cards"}]}