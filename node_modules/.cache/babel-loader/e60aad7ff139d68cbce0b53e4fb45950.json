{"remainingRequest":"/home/beskar/eos-prototype-users/node_modules/thread-loader/dist/cjs.js!/home/beskar/eos-prototype-users/node_modules/babel-loader/lib/index.js!/home/beskar/eos-prototype-users/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/beskar/eos-prototype-users/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/beskar/eos-prototype-users/src/views/extensions/sweet-alert/SweetAlertTypes.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/beskar/eos-prototype-users/src/views/extensions/sweet-alert/SweetAlertTypes.vue","mtime":1609867154645},{"path":"/home/beskar/eos-prototype-users/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/beskar/eos-prototype-users/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/beskar/eos-prototype-users/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/beskar/eos-prototype-users/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/beskar/eos-prototype-users/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IEJDYXJkQ29kZSBmcm9tICdAY29yZS9jb21wb25lbnRzL2ItY2FyZC1jb2RlL0JDYXJkQ29kZS52dWUnOwppbXBvcnQgeyBCQ2FyZFRleHQsIEJCdXR0b24gfSBmcm9tICdib290c3RyYXAtdnVlJzsKaW1wb3J0IFJpcHBsZSBmcm9tICd2dWUtcmlwcGxlLWRpcmVjdGl2ZSc7CmltcG9ydCB7IGNvZGVUeXBlcyB9IGZyb20gJy4vY29kZSc7CmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBCQ2FyZENvZGU6IEJDYXJkQ29kZSwKICAgIEJDYXJkVGV4dDogQkNhcmRUZXh0LAogICAgQkJ1dHRvbjogQkJ1dHRvbgogIH0sCiAgZGlyZWN0aXZlczogewogICAgUmlwcGxlOiBSaXBwbGUKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjb2RlVHlwZXM6IGNvZGVUeXBlcwogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIC8vIHN1Y2Nlc3MKICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIHN1Y2Nlc3MoKSB7CiAgICAgIHRoaXMuJHN3YWwoewogICAgICAgIHRpdGxlOiAnR29vZCBqb2IhJywKICAgICAgICB0ZXh0OiAnWW91IGNsaWNrZWQgdGhlIGJ1dHRvbiEnLAogICAgICAgIGljb246ICdzdWNjZXNzJywKICAgICAgICBjdXN0b21DbGFzczogewogICAgICAgICAgY29uZmlybUJ1dHRvbjogJ2J0biBidG4tcHJpbWFyeScKICAgICAgICB9LAogICAgICAgIGJ1dHRvbnNTdHlsaW5nOiBmYWxzZQogICAgICB9KTsKICAgIH0sCiAgICAvLyBlcnJvcgogICAgZXJyb3I6IGZ1bmN0aW9uIGVycm9yKCkgewogICAgICB0aGlzLiRzd2FsKHsKICAgICAgICB0aXRsZTogJ0Vycm9yIScsCiAgICAgICAgdGV4dDogJyBZb3UgY2xpY2tlZCB0aGUgYnV0dG9uIScsCiAgICAgICAgaWNvbjogJ2Vycm9yJywKICAgICAgICBjdXN0b21DbGFzczogewogICAgICAgICAgY29uZmlybUJ1dHRvbjogJ2J0biBidG4tcHJpbWFyeScKICAgICAgICB9LAogICAgICAgIGJ1dHRvbnNTdHlsaW5nOiBmYWxzZQogICAgICB9KTsKICAgIH0sCiAgICAvLyB3YXJuaW5nCiAgICB3YXJuaW5nOiBmdW5jdGlvbiB3YXJuaW5nKCkgewogICAgICB0aGlzLiRzd2FsKHsKICAgICAgICB0aXRsZTogJ1dhcm5pbmchJywKICAgICAgICB0ZXh0OiAnIFlvdSBjbGlja2VkIHRoZSBidXR0b24hJywKICAgICAgICBpY29uOiAnd2FybmluZycsCiAgICAgICAgY3VzdG9tQ2xhc3M6IHsKICAgICAgICAgIGNvbmZpcm1CdXR0b246ICdidG4gYnRuLXByaW1hcnknCiAgICAgICAgfSwKICAgICAgICBidXR0b25zU3R5bGluZzogZmFsc2UKICAgICAgfSk7CiAgICB9LAogICAgLy8gaW5mbwogICAgaW5mbzogZnVuY3Rpb24gaW5mbygpIHsKICAgICAgdGhpcy4kc3dhbCh7CiAgICAgICAgdGl0bGU6ICdJbmZvIScsCiAgICAgICAgdGV4dDogJ1lvdSBjbGlja2VkIHRoZSBidXR0b24hJywKICAgICAgICBpY29uOiAnaW5mbycsCiAgICAgICAgY3VzdG9tQ2xhc3M6IHsKICAgICAgICAgIGNvbmZpcm1CdXR0b246ICdidG4gYnRuLXByaW1hcnknCiAgICAgICAgfSwKICAgICAgICBidXR0b25zU3R5bGluZzogZmFsc2UKICAgICAgfSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["SweetAlertTypes.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CA,OAAA,SAAA,MAAA,4CAAA;AACA,SAAA,SAAA,EAAA,OAAA,QAAA,eAAA;AACA,OAAA,MAAA,MAAA,sBAAA;AACA,SAAA,SAAA,QAAA,QAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,SAAA,EAAA,SADA;AAEA,IAAA,SAAA,EAAA,SAFA;AAGA,IAAA,OAAA,EAAA;AAHA,GADA;AAMA,EAAA,UAAA,EAAA;AACA,IAAA,MAAA,EAAA;AADA,GANA;AASA,EAAA,IATA,kBASA;AACA,WAAA;AACA,MAAA,SAAA,EAAA;AADA,KAAA;AAGA,GAbA;AAcA,EAAA,OAAA,EAAA;AAEA;AACA,IAAA,OAHA,qBAGA;AACA,WAAA,KAAA,CAAA;AACA,QAAA,KAAA,EAAA,WADA;AAEA,QAAA,IAAA,EAAA,yBAFA;AAGA,QAAA,IAAA,EAAA,SAHA;AAIA,QAAA,WAAA,EAAA;AACA,UAAA,aAAA,EAAA;AADA,SAJA;AAOA,QAAA,cAAA,EAAA;AAPA,OAAA;AASA,KAbA;AAeA;AACA,IAAA,KAhBA,mBAgBA;AACA,WAAA,KAAA,CAAA;AACA,QAAA,KAAA,EAAA,QADA;AAEA,QAAA,IAAA,EAAA,0BAFA;AAGA,QAAA,IAAA,EAAA,OAHA;AAIA,QAAA,WAAA,EAAA;AACA,UAAA,aAAA,EAAA;AADA,SAJA;AAOA,QAAA,cAAA,EAAA;AAPA,OAAA;AASA,KA1BA;AA4BA;AACA,IAAA,OA7BA,qBA6BA;AACA,WAAA,KAAA,CAAA;AACA,QAAA,KAAA,EAAA,UADA;AAEA,QAAA,IAAA,EAAA,0BAFA;AAGA,QAAA,IAAA,EAAA,SAHA;AAIA,QAAA,WAAA,EAAA;AACA,UAAA,aAAA,EAAA;AADA,SAJA;AAOA,QAAA,cAAA,EAAA;AAPA,OAAA;AASA,KAvCA;AAyCA;AACA,IAAA,IA1CA,kBA0CA;AACA,WAAA,KAAA,CAAA;AACA,QAAA,KAAA,EAAA,OADA;AAEA,QAAA,IAAA,EAAA,yBAFA;AAGA,QAAA,IAAA,EAAA,MAHA;AAIA,QAAA,WAAA,EAAA;AACA,UAAA,aAAA,EAAA;AADA,SAJA;AAOA,QAAA,cAAA,EAAA;AAPA,OAAA;AASA;AApDA;AAdA,CAAA","sourcesContent":["<template>\n  <b-card-code title=\"Types\">\n    <b-card-text>\n      The type of the modal. SweetAlert comes with 4 built-in types which will show a corresponding icon animation: \"success\", \"error\", \"warning\" and \"info\". You can also set it as \"input\" to get a prompt modal. It can either be put in the object under the key \"icon\" or passed as the third parameter of the function.\n    </b-card-text>\n\n    <!-- trigger button -->\n    <div class=\"demo-inline-spacing\">\n      <b-button\n        v-ripple.400=\"'rgba(40, 199, 111, 0.15)'\"\n        variant=\"outline-success\"\n        @click=\"success\"\n      >\n        Success\n      </b-button>\n      <b-button\n        v-ripple.400=\"'rgba(234, 84, 85, 0.15)'\"\n        variant=\"outline-danger\"\n        @click=\"error\"\n      >\n        Error\n      </b-button>\n      <b-button\n        v-ripple.400=\"'rgba(255, 159, 67, 0.15)'\"\n        variant=\"outline-warning\"\n        @click=\"warning\"\n      >\n        Warning\n      </b-button>\n      <b-button\n        v-ripple.400=\"'rgba(0, 207, 232, 0.15)'\"\n        variant=\"outline-info\"\n        @click=\"info\"\n      >\n        Info\n      </b-button>\n    </div>\n\n    <template #code>\n      {{ codeTypes }}\n    </template>\n  </b-card-code>\n</template>\n\n<script>\nimport BCardCode from '@core/components/b-card-code/BCardCode.vue'\nimport { BCardText, BButton } from 'bootstrap-vue'\nimport Ripple from 'vue-ripple-directive'\nimport { codeTypes } from './code'\n\nexport default {\n  components: {\n    BCardCode,\n    BCardText,\n    BButton,\n  },\n  directives: {\n    Ripple,\n  },\n  data() {\n    return {\n      codeTypes,\n    }\n  },\n  methods: {\n\n    // success\n    success() {\n      this.$swal({\n        title: 'Good job!',\n        text: 'You clicked the button!',\n        icon: 'success',\n        customClass: {\n          confirmButton: 'btn btn-primary',\n        },\n        buttonsStyling: false,\n      })\n    },\n\n    // error\n    error() {\n      this.$swal({\n        title: 'Error!',\n        text: ' You clicked the button!',\n        icon: 'error',\n        customClass: {\n          confirmButton: 'btn btn-primary',\n        },\n        buttonsStyling: false,\n      })\n    },\n\n    // warning\n    warning() {\n      this.$swal({\n        title: 'Warning!',\n        text: ' You clicked the button!',\n        icon: 'warning',\n        customClass: {\n          confirmButton: 'btn btn-primary',\n        },\n        buttonsStyling: false,\n      })\n    },\n\n    // info\n    info() {\n      this.$swal({\n        title: 'Info!',\n        text: 'You clicked the button!',\n        icon: 'info',\n        customClass: {\n          confirmButton: 'btn btn-primary',\n        },\n        buttonsStyling: false,\n      })\n    },\n  },\n}\n</script>\n"],"sourceRoot":"src/views/extensions/sweet-alert"}]}