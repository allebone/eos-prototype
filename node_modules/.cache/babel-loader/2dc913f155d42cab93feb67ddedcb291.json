{"remainingRequest":"/home/beskar/eos-prototype-users/node_modules/thread-loader/dist/cjs.js!/home/beskar/eos-prototype-users/node_modules/babel-loader/lib/index.js!/home/beskar/eos-prototype-users/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/beskar/eos-prototype-users/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/beskar/eos-prototype-users/src/views/pages/account-setting/AccountSettingGeneral.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/beskar/eos-prototype-users/src/views/pages/account-setting/AccountSettingGeneral.vue","mtime":1609867154653},{"path":"/home/beskar/eos-prototype-users/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/beskar/eos-prototype-users/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/beskar/eos-prototype-users/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/beskar/eos-prototype-users/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/beskar/eos-prototype-users/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgQkZvcm1GaWxlLCBCQnV0dG9uLCBCRm9ybSwgQkZvcm1Hcm91cCwgQkZvcm1JbnB1dCwgQlJvdywgQkNvbCwgQkFsZXJ0LCBCQ2FyZCwgQkNhcmRUZXh0LCBCTWVkaWEsIEJNZWRpYUFzaWRlLCBCTWVkaWFCb2R5LCBCTGluaywgQkltZyB9IGZyb20gJ2Jvb3RzdHJhcC12dWUnOwppbXBvcnQgUmlwcGxlIGZyb20gJ3Z1ZS1yaXBwbGUtZGlyZWN0aXZlJzsKaW1wb3J0IHsgdXNlSW5wdXRJbWFnZVJlbmRlcmVyIH0gZnJvbSAnQGNvcmUvY29tcC1mdW5jdGlvbnMvZm9ybXMvZm9ybS11dGlscyc7CmltcG9ydCB7IHJlZiB9IGZyb20gJ0B2dWUvY29tcG9zaXRpb24tYXBpJzsKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIEJCdXR0b246IEJCdXR0b24sCiAgICBCRm9ybTogQkZvcm0sCiAgICBCSW1nOiBCSW1nLAogICAgQkZvcm1GaWxlOiBCRm9ybUZpbGUsCiAgICBCRm9ybUdyb3VwOiBCRm9ybUdyb3VwLAogICAgQkZvcm1JbnB1dDogQkZvcm1JbnB1dCwKICAgIEJSb3c6IEJSb3csCiAgICBCQ29sOiBCQ29sLAogICAgQkFsZXJ0OiBCQWxlcnQsCiAgICBCQ2FyZDogQkNhcmQsCiAgICBCQ2FyZFRleHQ6IEJDYXJkVGV4dCwKICAgIEJNZWRpYTogQk1lZGlhLAogICAgQk1lZGlhQXNpZGU6IEJNZWRpYUFzaWRlLAogICAgQk1lZGlhQm9keTogQk1lZGlhQm9keSwKICAgIEJMaW5rOiBCTGluawogIH0sCiAgZGlyZWN0aXZlczogewogICAgUmlwcGxlOiBSaXBwbGUKICB9LAogIHByb3BzOiB7CiAgICBnZW5lcmFsRGF0YTogewogICAgICB0eXBlOiBPYmplY3QsCiAgICAgICJkZWZhdWx0IjogZnVuY3Rpb24gX2RlZmF1bHQoKSB7fQogICAgfQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIG9wdGlvbnNMb2NhbDogSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeSh0aGlzLmdlbmVyYWxEYXRhKSksCiAgICAgIHByb2ZpbGVGaWxlOiBudWxsCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgcmVzZXRGb3JtOiBmdW5jdGlvbiByZXNldEZvcm0oKSB7CiAgICAgIHRoaXMub3B0aW9uc0xvY2FsID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeSh0aGlzLmdlbmVyYWxEYXRhKSk7CiAgICB9CiAgfSwKICBzZXR1cDogZnVuY3Rpb24gc2V0dXAoKSB7CiAgICB2YXIgcmVmSW5wdXRFbCA9IHJlZihudWxsKTsKICAgIHZhciBwcmV2aWV3RWwgPSByZWYobnVsbCk7CgogICAgdmFyIF91c2VJbnB1dEltYWdlUmVuZGVyZSA9IHVzZUlucHV0SW1hZ2VSZW5kZXJlcihyZWZJbnB1dEVsLCBwcmV2aWV3RWwpLAogICAgICAgIGlucHV0SW1hZ2VSZW5kZXJlciA9IF91c2VJbnB1dEltYWdlUmVuZGVyZS5pbnB1dEltYWdlUmVuZGVyZXI7CgogICAgcmV0dXJuIHsKICAgICAgcmVmSW5wdXRFbDogcmVmSW5wdXRFbCwKICAgICAgcHJldmlld0VsOiBwcmV2aWV3RWwsCiAgICAgIGlucHV0SW1hZ2VSZW5kZXJlcjogaW5wdXRJbWFnZVJlbmRlcmVyCiAgICB9OwogIH0KfTs="},{"version":3,"sources":["AccountSettingGeneral.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwJA,SACA,SADA,EACA,OADA,EACA,KADA,EACA,UADA,EACA,UADA,EACA,IADA,EACA,IADA,EACA,MADA,EACA,KADA,EACA,SADA,EACA,MADA,EACA,WADA,EACA,UADA,EACA,KADA,EACA,IADA,QAEA,eAFA;AAGA,OAAA,MAAA,MAAA,sBAAA;AACA,SAAA,qBAAA,QAAA,uCAAA;AACA,SAAA,GAAA,QAAA,sBAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,OAAA,EAAA,OADA;AAEA,IAAA,KAAA,EAAA,KAFA;AAGA,IAAA,IAAA,EAAA,IAHA;AAIA,IAAA,SAAA,EAAA,SAJA;AAKA,IAAA,UAAA,EAAA,UALA;AAMA,IAAA,UAAA,EAAA,UANA;AAOA,IAAA,IAAA,EAAA,IAPA;AAQA,IAAA,IAAA,EAAA,IARA;AASA,IAAA,MAAA,EAAA,MATA;AAUA,IAAA,KAAA,EAAA,KAVA;AAWA,IAAA,SAAA,EAAA,SAXA;AAYA,IAAA,MAAA,EAAA,MAZA;AAaA,IAAA,WAAA,EAAA,WAbA;AAcA,IAAA,UAAA,EAAA,UAdA;AAeA,IAAA,KAAA,EAAA;AAfA,GADA;AAkBA,EAAA,UAAA,EAAA;AACA,IAAA,MAAA,EAAA;AADA,GAlBA;AAqBA,EAAA,KAAA,EAAA;AACA,IAAA,WAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,iBAAA,oBAAA,CAAA;AAFA;AADA,GArBA;AA2BA,EAAA,IA3BA,kBA2BA;AACA,WAAA;AACA,MAAA,YAAA,EAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,SAAA,CAAA,KAAA,WAAA,CAAA,CADA;AAEA,MAAA,WAAA,EAAA;AAFA,KAAA;AAIA,GAhCA;AAiCA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,uBACA;AACA,WAAA,YAAA,GAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,SAAA,CAAA,KAAA,WAAA,CAAA,CAAA;AACA;AAHA,GAjCA;AAsCA,EAAA,KAtCA,mBAsCA;AACA,QAAA,UAAA,GAAA,GAAA,CAAA,IAAA,CAAA;AACA,QAAA,SAAA,GAAA,GAAA,CAAA,IAAA,CAAA;;AAFA,gCAIA,qBAAA,CAAA,UAAA,EAAA,SAAA,CAJA;AAAA,QAIA,kBAJA,yBAIA,kBAJA;;AAMA,WAAA;AACA,MAAA,UAAA,EAAA,UADA;AAEA,MAAA,SAAA,EAAA,SAFA;AAGA,MAAA,kBAAA,EAAA;AAHA,KAAA;AAKA;AAjDA,CAAA","sourcesContent":["<template>\n  <b-card>\n\n    <!-- media -->\n    <b-media no-body>\n      <b-media-aside>\n        <b-link>\n          <b-img\n            ref=\"previewEl\"\n            rounded\n            :src=\"optionsLocal.avatar\"\n            height=\"80\"\n          />\n        </b-link>\n        <!--/ avatar -->\n      </b-media-aside>\n\n      <b-media-body class=\"mt-75 ml-75\">\n        <!-- upload button -->\n        <b-button\n          v-ripple.400=\"'rgba(255, 255, 255, 0.15)'\"\n          variant=\"primary\"\n          size=\"sm\"\n          class=\"mb-75 mr-75\"\n          @click=\"$refs.refInputEl.$el.click()\"\n        >\n          Upload\n        </b-button>\n        <b-form-file\n          ref=\"refInputEl\"\n          v-model=\"profileFile\"\n          accept=\".jpg, .png, .gif\"\n          :hidden=\"true\"\n          plain\n          @input=\"inputImageRenderer\"\n        />\n        <!--/ upload button -->\n\n        <!-- reset -->\n        <b-button\n          v-ripple.400=\"'rgba(186, 191, 199, 0.15)'\"\n          variant=\"outline-secondary\"\n          size=\"sm\"\n          class=\"mb-75 mr-75\"\n        >\n          Reset\n        </b-button>\n        <!--/ reset -->\n        <b-card-text>Allowed JPG, GIF or PNG. Max size of 800kB</b-card-text>\n      </b-media-body>\n    </b-media>\n    <!--/ media -->\n\n    <!-- form -->\n    <b-form class=\"mt-2\">\n      <b-row>\n        <b-col sm=\"6\">\n          <b-form-group\n            label=\"Username\"\n            label-for=\"account-username\"\n          >\n            <b-form-input\n              v-model=\"optionsLocal.username\"\n              placeholder=\"Username\"\n              name=\"username\"\n            />\n          </b-form-group>\n        </b-col>\n        <b-col sm=\"6\">\n          <b-form-group\n            label=\"Name\"\n            label-for=\"account-name\"\n          >\n            <b-form-input\n              v-model=\"optionsLocal.fullName\"\n              name=\"name\"\n              placeholder=\"Name\"\n            />\n          </b-form-group>\n        </b-col>\n        <b-col sm=\"6\">\n          <b-form-group\n            label=\"E-mail\"\n            label-for=\"account-e-mail\"\n          >\n            <b-form-input\n              v-model=\"optionsLocal.email\"\n              name=\"email\"\n              placeholder=\"Email\"\n            />\n\n          </b-form-group>\n        </b-col>\n        <b-col sm=\"6\">\n          <b-form-group\n            label=\"Company\"\n            label-for=\"account-company\"\n          >\n            <b-form-input\n              v-model=\"optionsLocal.company\"\n              name=\"company\"\n              placeholder=\"Company name\"\n            />\n          </b-form-group>\n        </b-col>\n\n        <!-- alert -->\n        <b-col\n          cols=\"12\"\n          class=\"mt-75\"\n        >\n          <b-alert\n            show\n            variant=\"warning\"\n            class=\"mb-50\"\n          >\n            <h4 class=\"alert-heading\">\n              Your email is not confirmed. Please check your inbox.\n            </h4>\n            <div class=\"alert-body\">\n              <b-link class=\"alert-link\">\n                Resend confirmation\n              </b-link>\n            </div>\n          </b-alert>\n        </b-col>\n        <!--/ alert -->\n\n        <b-col cols=\"12\">\n          <b-button\n            v-ripple.400=\"'rgba(255, 255, 255, 0.15)'\"\n            variant=\"primary\"\n            class=\"mt-2 mr-1\"\n          >\n            Save changes\n          </b-button>\n          <b-button\n            v-ripple.400=\"'rgba(186, 191, 199, 0.15)'\"\n            variant=\"outline-secondary\"\n            type=\"reset\"\n            class=\"mt-2\"\n            @click.prevent=\"resetForm\"\n          >\n            Reset\n          </b-button>\n        </b-col>\n      </b-row>\n    </b-form>\n  </b-card>\n</template>\n\n<script>\nimport {\n  BFormFile, BButton, BForm, BFormGroup, BFormInput, BRow, BCol, BAlert, BCard, BCardText, BMedia, BMediaAside, BMediaBody, BLink, BImg,\n} from 'bootstrap-vue'\nimport Ripple from 'vue-ripple-directive'\nimport { useInputImageRenderer } from '@core/comp-functions/forms/form-utils'\nimport { ref } from '@vue/composition-api'\n\nexport default {\n  components: {\n    BButton,\n    BForm,\n    BImg,\n    BFormFile,\n    BFormGroup,\n    BFormInput,\n    BRow,\n    BCol,\n    BAlert,\n    BCard,\n    BCardText,\n    BMedia,\n    BMediaAside,\n    BMediaBody,\n    BLink,\n  },\n  directives: {\n    Ripple,\n  },\n  props: {\n    generalData: {\n      type: Object,\n      default: () => {},\n    },\n  },\n  data() {\n    return {\n      optionsLocal: JSON.parse(JSON.stringify(this.generalData)),\n      profileFile: null,\n    }\n  },\n  methods: {\n    resetForm() {\n      this.optionsLocal = JSON.parse(JSON.stringify(this.generalData))\n    },\n  },\n  setup() {\n    const refInputEl = ref(null)\n    const previewEl = ref(null)\n\n    const { inputImageRenderer } = useInputImageRenderer(refInputEl, previewEl)\n\n    return {\n      refInputEl,\n      previewEl,\n      inputImageRenderer,\n    }\n  },\n}\n</script>\n"],"sourceRoot":"src/views/pages/account-setting"}]}