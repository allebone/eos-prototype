{"remainingRequest":"/home/beskar/eos-prototype-users/node_modules/thread-loader/dist/cjs.js!/home/beskar/eos-prototype-users/node_modules/babel-loader/lib/index.js!/home/beskar/eos-prototype-users/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/beskar/eos-prototype-users/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/beskar/eos-prototype-users/src/views/extensions/drag-drop/DragDropMultipleList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/beskar/eos-prototype-users/src/views/extensions/drag-drop/DragDropMultipleList.vue","mtime":1609867154645},{"path":"/home/beskar/eos-prototype-users/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/beskar/eos-prototype-users/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/beskar/eos-prototype-users/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/beskar/eos-prototype-users/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/beskar/eos-prototype-users/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IEJDYXJkQ29kZSBmcm9tICdAY29yZS9jb21wb25lbnRzL2ItY2FyZC1jb2RlL0JDYXJkQ29kZS52dWUnOwppbXBvcnQgeyBCTGlzdEdyb3VwSXRlbSwgQkF2YXRhciwgQlJvdywgQkNvbCwgQkNhcmRUZXh0IH0gZnJvbSAnYm9vdHN0cmFwLXZ1ZSc7CmltcG9ydCBkcmFnZ2FibGUgZnJvbSAndnVlZHJhZ2dhYmxlJzsKaW1wb3J0IFByaXNtIGZyb20gJ3Z1ZS1wcmlzbS1jb21wb25lbnQnOwppbXBvcnQgJ3ByaXNtanMnOwppbXBvcnQgJ3ByaXNtanMvdGhlbWVzL3ByaXNtLXRvbW9ycm93LmNzcyc7CmltcG9ydCB7IGNvZGVNdWx0aXBsZSB9IGZyb20gJy4vY29kZSc7CmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBCQ2FyZENvZGU6IEJDYXJkQ29kZSwKICAgIEJBdmF0YXI6IEJBdmF0YXIsCiAgICBCTGlzdEdyb3VwSXRlbTogQkxpc3RHcm91cEl0ZW0sCiAgICBCQ2FyZFRleHQ6IEJDYXJkVGV4dCwKICAgIEJSb3c6IEJSb3csCiAgICBCQ29sOiBCQ29sLAogICAgUHJpc206IFByaXNtLAogICAgZHJhZ2dhYmxlOiBkcmFnZ2FibGUKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjb2RlTXVsdGlwbGU6IGNvZGVNdWx0aXBsZSwKICAgICAgbGlzdDE6IFt7CiAgICAgICAgbmFtZTogJ1BheiBKb3lhJywKICAgICAgICBlbWFpbDogJ2dpcmxpbmVzc0BzcG90bGlrZS5jby51aycKICAgICAgfSwgewogICAgICAgIG5hbWU6ICdTdW5zaGluZSBDb3NlJywKICAgICAgICBlbWFpbDogJ2V4ZWN1dHJpeHNoaXBAZXF1aXNpemVkLmVkdScKICAgICAgfSwgewogICAgICAgIG5hbWU6ICdBbGJhIERvYmJpbicsCiAgICAgICAgZW1haWw6ICdiaWRkaW5nQGRlbWlib2Iub3InCiAgICAgIH0sIHsKICAgICAgICBuYW1lOiAnTWFybGluIEhpbmNoZWUnLAogICAgICAgIGVtYWlsOiAncHJlaG9sZGluZ0BzY3VmZmx5LmNvLnVrJwogICAgICB9XSwKICAgICAgbGlzdDI6IFt7CiAgICAgICAgbmFtZTogJ0xlaWEgQXRpZW56YScsCiAgICAgICAgZW1haWw6ICd1bm1lYXN1cmFibGVuZXNzQGludGVybGFtZWxsYXIuY28udWsnCiAgICAgIH0sIHsKICAgICAgICBuYW1lOiAnTGFzaGF3bmEgVmF1ZHJhaW5tJywKICAgICAgICBlbWFpbDogJ3NvYWtpbmdAa2h1YmJlci5jb20nCiAgICAgIH0sIHsKICAgICAgICBuYW1lOiAnTGlsaWFuYSBIZW5zY2hlaWQnLAogICAgICAgIGVtYWlsOiAnbGVjaWRlaW5lQHR1cm5kb3duLm9yZycKICAgICAgfSwgewogICAgICAgIG5hbWU6ICdLZXZlbiBLb2x0ZXInLAogICAgICAgIGVtYWlsOiAnbm9udGVudXJlQGFuZ2xpY2FudW0uY28udWsnCiAgICAgIH1dCiAgICB9OwogIH0KfTs="},{"version":3,"sources":["DragDropMultipleList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+GA,OAAA,SAAA,MAAA,4CAAA;AACA,SACA,cADA,EACA,OADA,EACA,IADA,EACA,IADA,EACA,SADA,QAEA,eAFA;AAGA,OAAA,SAAA,MAAA,cAAA;AACA,OAAA,KAAA,MAAA,qBAAA;AACA,OAAA,SAAA;AACA,OAAA,mCAAA;AACA,SAAA,YAAA,QAAA,QAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,SAAA,EAAA,SADA;AAEA,IAAA,OAAA,EAAA,OAFA;AAGA,IAAA,cAAA,EAAA,cAHA;AAIA,IAAA,SAAA,EAAA,SAJA;AAKA,IAAA,IAAA,EAAA,IALA;AAMA,IAAA,IAAA,EAAA,IANA;AAOA,IAAA,KAAA,EAAA,KAPA;AAQA,IAAA,SAAA,EAAA;AARA,GADA;AAWA,EAAA,IAXA,kBAWA;AACA,WAAA;AACA,MAAA,YAAA,EAAA,YADA;AAEA,MAAA,KAAA,EAAA,CACA;AACA,QAAA,IAAA,EAAA,UADA;AAEA,QAAA,KAAA,EAAA;AAFA,OADA,EAKA;AACA,QAAA,IAAA,EAAA,eADA;AAEA,QAAA,KAAA,EAAA;AAFA,OALA,EASA;AACA,QAAA,IAAA,EAAA,aADA;AAEA,QAAA,KAAA,EAAA;AAFA,OATA,EAaA;AACA,QAAA,IAAA,EAAA,gBADA;AAEA,QAAA,KAAA,EAAA;AAFA,OAbA,CAFA;AAoBA,MAAA,KAAA,EAAA,CACA;AACA,QAAA,IAAA,EAAA,cADA;AAEA,QAAA,KAAA,EAAA;AAFA,OADA,EAKA;AACA,QAAA,IAAA,EAAA,oBADA;AAEA,QAAA,KAAA,EAAA;AAFA,OALA,EASA;AACA,QAAA,IAAA,EAAA,mBADA;AAEA,QAAA,KAAA,EAAA;AAFA,OATA,EAaA;AACA,QAAA,IAAA,EAAA,cADA;AAEA,QAAA,KAAA,EAAA;AAFA,OAbA;AApBA,KAAA;AAuCA;AAnDA,CAAA","sourcesContent":["<template>\n  <b-card-code title=\"Multiple Lists\">\n    <b-card-text>\n      <span>Drag and drop items of more than one list. Add same </span>\n      <code>group</code>\n      <span> to </span>\n      <code>group</code>\n      <span> prop.</span>\n    </b-card-text>\n\n    <b-row>\n\n      <!-- people group 1 -->\n      <b-col md=\"6\">\n        <h6 class=\"text-primary font-weight-bold mb-2\">\n          People Group 1\n        </h6>\n\n        <!-- draggable -->\n        <draggable\n          :list=\"list1\"\n          tag=\"ul\"\n          group=\"people\"\n          class=\"list-group list-group-flush cursor-move\"\n        >\n          <b-list-group-item\n            v-for=\"(listItem, index) in list1\"\n            :key=\"index\"\n            tag=\"li\"\n          >\n            <div class=\"d-flex\">\n              <b-avatar :text=\"listItem.name.slice(0,2)\" />\n              <div class=\"ml-25\">\n                <b-card-text class=\"mb-0 font-weight-bold\">\n                  {{ listItem.name }}\n                </b-card-text>\n                <small>{{ listItem.email }}</small>\n              </div>\n            </div>\n          </b-list-group-item>\n        </draggable>\n      </b-col>\n\n      <!-- people group 2 -->\n      <b-col\n        md=\"6\"\n        class=\"mt-sm-2 mt-md-0\"\n      >\n        <h6 class=\"text-primary font-weight-bold mb-2\">\n          People Group 2\n        </h6>\n\n        <!-- draggable -->\n        <draggable\n          :list=\"list2\"\n          tag=\"ul\"\n          group=\"people\"\n          class=\"list-group list-group-flush cursor-move\"\n        >\n          <b-list-group-item\n            v-for=\"(listItem, index) in list2\"\n            :key=\"index\"\n            tag=\"li\"\n          >\n            <div class=\"d-flex\">\n              <b-avatar :text=\"listItem.name.slice(0,2)\" />\n              <div class=\"ml-25\">\n                <b-card-text class=\"mb-0 font-weight-bold\">\n                  {{ listItem.name }}\n                </b-card-text>\n                <small>{{ listItem.email }}</small>\n              </div>\n            </div>\n          </b-list-group-item>\n        </draggable>\n      </b-col>\n\n      <!-- people group 1 code -->\n      <b-col\n        md=\"6\"\n        class=\"mt-1\"\n      >\n        <prism\n          language=\"javascript\"\n          class=\"rounded\"\n        >\n          People Group 1: {{ list1 }}\n        </prism>\n      </b-col>\n\n      <!-- people group 2 code -->\n      <b-col\n        md=\"6\"\n        class=\"mt-1\"\n      >\n        <prism\n          language=\"javascript\"\n          class=\"rounded\"\n        >\n          People Group 2: {{ list2 }}\n        </prism>\n      </b-col>\n    </b-row>\n\n    <template #code>\n      {{ codeMultiple }}\n    </template>\n  </b-card-code>\n</template>\n\n<script>\nimport BCardCode from '@core/components/b-card-code/BCardCode.vue'\nimport {\n  BListGroupItem, BAvatar, BRow, BCol, BCardText,\n} from 'bootstrap-vue'\nimport draggable from 'vuedraggable'\nimport Prism from 'vue-prism-component'\nimport 'prismjs'\nimport 'prismjs/themes/prism-tomorrow.css'\nimport { codeMultiple } from './code'\n\nexport default {\n  components: {\n    BCardCode,\n    BAvatar,\n    BListGroupItem,\n    BCardText,\n    BRow,\n    BCol,\n    Prism,\n    draggable,\n  },\n  data() {\n    return {\n      codeMultiple,\n      list1: [\n        {\n          name: 'Paz Joya',\n          email: 'girliness@spotlike.co.uk',\n        },\n        {\n          name: 'Sunshine Cose',\n          email: 'executrixship@equisized.edu',\n        },\n        {\n          name: 'Alba Dobbin',\n          email: 'bidding@demibob.or',\n        },\n        {\n          name: 'Marlin Hinchee',\n          email: 'preholding@scuffly.co.uk',\n        },\n      ],\n      list2: [\n        {\n          name: 'Leia Atienza',\n          email: 'unmeasurableness@interlamellar.co.uk',\n        },\n        {\n          name: 'Lashawna Vaudrainm',\n          email: 'soaking@khubber.com',\n        },\n        {\n          name: 'Liliana Henscheid',\n          email: 'lecideine@turndown.org',\n        },\n        {\n          name: 'Keven Kolter',\n          email: 'nontenure@anglicanum.co.uk',\n        },\n      ],\n    }\n  },\n}\n</script>\n"],"sourceRoot":"src/views/extensions/drag-drop"}]}