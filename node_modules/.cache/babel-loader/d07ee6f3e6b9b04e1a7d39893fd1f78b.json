{"remainingRequest":"/home/beskar/eos-prototype-users/node_modules/thread-loader/dist/cjs.js!/home/beskar/eos-prototype-users/node_modules/babel-loader/lib/index.js!/home/beskar/eos-prototype-users/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/beskar/eos-prototype-users/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/beskar/eos-prototype-users/src/views/table/bs-table/TableFormatterCallback.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/beskar/eos-prototype-users/src/views/table/bs-table/TableFormatterCallback.vue","mtime":1609867154653},{"path":"/home/beskar/eos-prototype-users/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/beskar/eos-prototype-users/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/beskar/eos-prototype-users/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/beskar/eos-prototype-users/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/beskar/eos-prototype-users/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZGF0ZS50by1zdHJpbmcuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgQkNhcmRDb2RlIGZyb20gJ0Bjb3JlL2NvbXBvbmVudHMvYi1jYXJkLWNvZGUvQkNhcmRDb2RlLnZ1ZSc7CmltcG9ydCB7IEJUYWJsZSwgQkxpbmsgfSBmcm9tICdib290c3RyYXAtdnVlJzsKaW1wb3J0IHsgY29kZUZvcm1hdHRlckNhbGxiYWNrIH0gZnJvbSAnLi9jb2RlJzsKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIEJDYXJkQ29kZTogQkNhcmRDb2RlLAogICAgQlRhYmxlOiBCVGFibGUsCiAgICBCTGluazogQkxpbmsKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBmaWVsZHM6IFt7CiAgICAgICAga2V5OiAnbmFtZScsCiAgICAgICAgbGFiZWw6ICdGdWxsIE5hbWUnLAogICAgICAgIGZvcm1hdHRlcjogZnVuY3Rpb24gZm9ybWF0dGVyKHZhbHVlKSB7CiAgICAgICAgICByZXR1cm4gIiIuY29uY2F0KHZhbHVlLmZpcnN0LCAiICIpLmNvbmNhdCh2YWx1ZS5sYXN0KTsKICAgICAgICB9CiAgICAgIH0sIC8vIEEgcmVndWxhciBjb2x1bW4KICAgICAgJ2FnZScsIHsKICAgICAgICAvLyBBIHJlZ3VsYXIgY29sdW1uIHdpdGggY3VzdG9tIGZvcm1hdHRlcgogICAgICAgIGtleTogJ3NleCcsCiAgICAgICAgZm9ybWF0dGVyOiBmdW5jdGlvbiBmb3JtYXR0ZXIodmFsdWUpIHsKICAgICAgICAgIHJldHVybiB2YWx1ZS5jaGFyQXQoMCkudG9VcHBlckNhc2UoKTsKICAgICAgICB9CiAgICAgIH0sIHsKICAgICAgICAvLyBBIHZpcnR1YWwgY29sdW1uIHdpdGggY3VzdG9tIGZvcm1hdHRlcgogICAgICAgIGtleTogJ2JpcnRoWWVhcicsCiAgICAgICAgbGFiZWw6ICdCaXJ0aCBZZWFyJywKICAgICAgICBmb3JtYXR0ZXI6IGZ1bmN0aW9uIGZvcm1hdHRlcih2YWx1ZSwga2V5LCBpdGVtKSB7CiAgICAgICAgICByZXR1cm4gbmV3IERhdGUoKS5nZXRGdWxsWWVhcigpIC0gaXRlbS5hZ2U7CiAgICAgICAgfQogICAgICB9XSwKICAgICAgaXRlbXM6IFt7CiAgICAgICAgbmFtZTogewogICAgICAgICAgZmlyc3Q6ICdKb2huJywKICAgICAgICAgIGxhc3Q6ICdEb2UnCiAgICAgICAgfSwKICAgICAgICBzZXg6ICdNYWxlJywKICAgICAgICBhZ2U6IDQyCiAgICAgIH0sIHsKICAgICAgICBuYW1lOiB7CiAgICAgICAgICBmaXJzdDogJ0NsZW1lbnMnLAogICAgICAgICAgbGFzdDogJ0RvZScKICAgICAgICB9LAogICAgICAgIHNleDogJ0ZlbWFsZScsCiAgICAgICAgYWdlOiAzNgogICAgICB9LCB7CiAgICAgICAgbmFtZTogewogICAgICAgICAgZmlyc3Q6ICdSdWJpbicsCiAgICAgICAgICBsYXN0OiAnS2luY2FkZScKICAgICAgICB9LAogICAgICAgIHNleDogJ21hbGUnLAogICAgICAgIGFnZTogNzMKICAgICAgfSwgewogICAgICAgIG5hbWU6IHsKICAgICAgICAgIGZpcnN0OiAnU2hpcmxleScsCiAgICAgICAgICBsYXN0OiAnUGFydHJpZGdlJwogICAgICAgIH0sCiAgICAgICAgc2V4OiAnZmVtYWxlJywKICAgICAgICBhZ2U6IDYyCiAgICAgIH0sIHsKICAgICAgICBuYW1lOiB7CiAgICAgICAgICBmaXJzdDogJ09sZW5rYScsCiAgICAgICAgICBsYXN0OiAnQnJhd2xleScKICAgICAgICB9LAogICAgICAgIHNleDogJ2ZlbWFsZScsCiAgICAgICAgYWdlOiAyNgogICAgICB9XSwKICAgICAgY29kZUZvcm1hdHRlckNhbGxiYWNrOiBjb2RlRm9ybWF0dGVyQ2FsbGJhY2sKICAgIH07CiAgfQp9Ow=="},{"version":3,"sources":["TableFormatterCallback.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,OAAA,SAAA,MAAA,4CAAA;AACA,SAAA,MAAA,EAAA,KAAA,QAAA,eAAA;AACA,SAAA,qBAAA,QAAA,QAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,SAAA,EAAA,SADA;AAEA,IAAA,MAAA,EAAA,MAFA;AAGA,IAAA,KAAA,EAAA;AAHA,GADA;AAMA,EAAA,IANA,kBAMA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,CACA;AACA,QAAA,GAAA,EAAA,MADA;AAEA,QAAA,KAAA,EAAA,WAFA;AAGA,QAAA,SAAA,EAAA,mBAAA,KAAA;AAAA,2BAAA,KAAA,CAAA,KAAA,cAAA,KAAA,CAAA,IAAA;AAAA;AAHA,OADA,EAMA;AACA,WAPA,EAQA;AACA;AACA,QAAA,GAAA,EAAA,KAFA;AAGA,QAAA,SAAA,EAAA,mBAAA,KAAA;AAAA,iBAAA,KAAA,CAAA,MAAA,CAAA,CAAA,EAAA,WAAA,EAAA;AAAA;AAHA,OARA,EAaA;AACA;AACA,QAAA,GAAA,EAAA,WAFA;AAGA,QAAA,KAAA,EAAA,YAHA;AAIA,QAAA,SAAA,EAAA,mBAAA,KAAA,EAAA,GAAA,EAAA,IAAA;AAAA,iBAAA,IAAA,IAAA,GAAA,WAAA,KAAA,IAAA,CAAA,GAAA;AAAA;AAJA,OAbA,CADA;AAqBA,MAAA,KAAA,EAAA,CACA;AAAA,QAAA,IAAA,EAAA;AAAA,UAAA,KAAA,EAAA,MAAA;AAAA,UAAA,IAAA,EAAA;AAAA,SAAA;AAAA,QAAA,GAAA,EAAA,MAAA;AAAA,QAAA,GAAA,EAAA;AAAA,OADA,EAEA;AAAA,QAAA,IAAA,EAAA;AAAA,UAAA,KAAA,EAAA,SAAA;AAAA,UAAA,IAAA,EAAA;AAAA,SAAA;AAAA,QAAA,GAAA,EAAA,QAAA;AAAA,QAAA,GAAA,EAAA;AAAA,OAFA,EAGA;AAAA,QAAA,IAAA,EAAA;AAAA,UAAA,KAAA,EAAA,OAAA;AAAA,UAAA,IAAA,EAAA;AAAA,SAAA;AAAA,QAAA,GAAA,EAAA,MAAA;AAAA,QAAA,GAAA,EAAA;AAAA,OAHA,EAIA;AAAA,QAAA,IAAA,EAAA;AAAA,UAAA,KAAA,EAAA,SAAA;AAAA,UAAA,IAAA,EAAA;AAAA,SAAA;AAAA,QAAA,GAAA,EAAA,QAAA;AAAA,QAAA,GAAA,EAAA;AAAA,OAJA,EAKA;AAAA,QAAA,IAAA,EAAA;AAAA,UAAA,KAAA,EAAA,QAAA;AAAA,UAAA,IAAA,EAAA;AAAA,SAAA;AAAA,QAAA,GAAA,EAAA,QAAA;AAAA,QAAA,GAAA,EAAA;AAAA,OALA,CArBA;AA4BA,MAAA,qBAAA,EAAA;AA5BA,KAAA;AA8BA;AArCA,CAAA","sourcesContent":["<template>\n  <b-card-code\n    title=\"Formatter callback\"\n    no-body\n  >\n    <b-table\n      :fields=\"fields\"\n      :items=\"items\"\n    >\n      <template #cell(name)=\"data\">\n\n        <!-- `data.value` is the value after formatted by the Formatter -->\n        <b-link :href=\"`#${data.value.replace(/[^a-z]+/i,'-').toLowerCase()}`\">\n          {{ data.value }}\n        </b-link>\n      </template>\n    </b-table>\n\n    <template #code>\n      {{ codeFormatterCallback }}\n    </template>\n  </b-card-code>\n</template>\n\n<script>\nimport BCardCode from '@core/components/b-card-code/BCardCode.vue'\nimport { BTable, BLink } from 'bootstrap-vue'\nimport { codeFormatterCallback } from './code'\n\nexport default {\n  components: {\n    BCardCode,\n    BTable,\n    BLink,\n  },\n  data() {\n    return {\n      fields: [\n        {\n          key: 'name',\n          label: 'Full Name',\n          formatter: value => `${value.first} ${value.last}`,\n        },\n        // A regular column\n        'age',\n        {\n          // A regular column with custom formatter\n          key: 'sex',\n          formatter: value => value.charAt(0).toUpperCase(),\n        },\n        {\n          // A virtual column with custom formatter\n          key: 'birthYear',\n          label: 'Birth Year',\n          formatter: (value, key, item) => new Date().getFullYear() - item.age,\n        },\n      ],\n      items: [\n        { name: { first: 'John', last: 'Doe' }, sex: 'Male', age: 42 },\n        { name: { first: 'Clemens', last: 'Doe' }, sex: 'Female', age: 36 },\n        { name: { first: 'Rubin', last: 'Kincade' }, sex: 'male', age: 73 },\n        { name: { first: 'Shirley', last: 'Partridge' }, sex: 'female', age: 62 },\n        { name: { first: 'Olenka', last: 'Brawley' }, sex: 'female', age: 26 },\n      ],\n      codeFormatterCallback,\n    }\n  },\n}\n</script>\n"],"sourceRoot":"src/views/table/bs-table"}]}