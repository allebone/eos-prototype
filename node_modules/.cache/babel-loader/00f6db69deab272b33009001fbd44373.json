{"remainingRequest":"/home/beskar/eos-prototype-users/node_modules/thread-loader/dist/cjs.js!/home/beskar/eos-prototype-users/node_modules/babel-loader/lib/index.js!/home/beskar/eos-prototype-users/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/beskar/eos-prototype-users/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/beskar/eos-prototype-users/src/views/components/overlay/OverlayNoWrapMode.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/beskar/eos-prototype-users/src/views/components/overlay/OverlayNoWrapMode.vue","mtime":1609867154641},{"path":"/home/beskar/eos-prototype-users/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/beskar/eos-prototype-users/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/beskar/eos-prototype-users/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/beskar/eos-prototype-users/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/beskar/eos-prototype-users/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IEJDYXJkQ29kZSBmcm9tICdAY29yZS9jb21wb25lbnRzL2ItY2FyZC1jb2RlJzsKaW1wb3J0IHsgQk92ZXJsYXksIEJCdXR0b24sIEJDYXJkLCBCQ2FyZFRleHQgfSBmcm9tICdib290c3RyYXAtdnVlJzsKaW1wb3J0IFJpcHBsZSBmcm9tICd2dWUtcmlwcGxlLWRpcmVjdGl2ZSc7CmltcG9ydCB7IGNvZGVOb1dyYXBNb2RlIH0gZnJvbSAnLi9jb2RlJzsKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIEJDYXJkQ29kZTogQkNhcmRDb2RlLAogICAgQk92ZXJsYXk6IEJPdmVybGF5LAogICAgQkJ1dHRvbjogQkJ1dHRvbiwKICAgIEJDYXJkOiBCQ2FyZCwKICAgIEJDYXJkVGV4dDogQkNhcmRUZXh0CiAgfSwKICBkaXJlY3RpdmVzOiB7CiAgICBSaXBwbGU6IFJpcHBsZQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHNob3c6IGZhbHNlLAogICAgICBjb2RlTm9XcmFwTW9kZTogY29kZU5vV3JhcE1vZGUKICAgIH07CiAgfQp9Ow=="},{"version":3,"sources":["OverlayNoWrapMode.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8DA,OAAA,SAAA,MAAA,8BAAA;AACA,SACA,QADA,EACA,OADA,EACA,KADA,EACA,SADA,QAEA,eAFA;AAGA,OAAA,MAAA,MAAA,sBAAA;AACA,SAAA,cAAA,QAAA,QAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,SAAA,EAAA,SADA;AAEA,IAAA,QAAA,EAAA,QAFA;AAGA,IAAA,OAAA,EAAA,OAHA;AAIA,IAAA,KAAA,EAAA,KAJA;AAKA,IAAA,SAAA,EAAA;AALA,GADA;AAQA,EAAA,UAAA,EAAA;AACA,IAAA,MAAA,EAAA;AADA,GARA;AAWA,EAAA,IAXA,kBAWA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,cAAA,EAAA;AAFA,KAAA;AAIA;AAhBA,CAAA","sourcesContent":["<template>\n  <b-card-code\n    title=\"Non-wrapping mode\"\n  >\n    <b-card-text>\n      <span>By default, </span>\n      <code>&lt;b-overlay&gt;</code>\n      <span> wraps the content of the default slot. In some cases you may want to obscure a parent container. Use the </span>\n      <code>no-wrap</code>\n      <span> prop to disable rendering of the wrapping (and ignore the default slot). Note that this requires that the\n        ancestor element that is to be obscured to have relative positioning (either via the utility class </span>\n      <code>'position-relative'</code>\n      <span> , or CSS style </span>\n      <code>'position: relative;'</code>\n      <span>).</span>\n    </b-card-text>\n\n    <div>\n      <div class=\"position-relative p-2 bg-info\">\n        <b-card-text class=\"text-white font-weight-bold\">\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n        </b-card-text>\n        <b-card\n          title=\"Card with parent overlay\"\n          class=\"mb-1\"\n        >\n          <b-card-text>Laborum consequat non elit enim exercitation cillum.</b-card-text>\n          <b-card-text>Click the button to toggle the overlay:</b-card-text>\n          <b-button\n            v-ripple.400=\"'rgba(113, 102, 240, 0.15)'\"\n            :disabled=\"show\"\n            variant=\"outline-primary\"\n            @click=\"show = true\"\n          >\n            Show overlay\n          </b-button>\n        </b-card>\n        <b-card-text class=\"text-white font-weight-bold mb-0\">\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n        </b-card-text>\n        <b-overlay\n          :show=\"show\"\n          no-wrap\n        />\n      </div>\n      <b-button\n        v-ripple.400=\"'rgba(255, 255, 255, 0.15)'\"\n        class=\"mt-3\"\n        variant=\"primary\"\n        @click=\"show = !show\"\n      >\n        Toggle overlay\n      </b-button>\n    </div>\n\n    <template #code>\n      {{ codeNoWrapMode }}\n    </template>\n  </b-card-code>\n</template>\n\n<script>\nimport BCardCode from '@core/components/b-card-code'\nimport {\n  BOverlay, BButton, BCard, BCardText,\n} from 'bootstrap-vue'\nimport Ripple from 'vue-ripple-directive'\nimport { codeNoWrapMode } from './code'\n\nexport default {\n  components: {\n    BCardCode,\n    BOverlay,\n    BButton,\n    BCard,\n    BCardText,\n  },\n  directives: {\n    Ripple,\n  },\n  data() {\n    return {\n      show: false,\n      codeNoWrapMode,\n    }\n  },\n}\n</script>\n"],"sourceRoot":"src/views/components/overlay"}]}