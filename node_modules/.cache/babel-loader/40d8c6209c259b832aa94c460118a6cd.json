{"remainingRequest":"/home/beskar/eos-prototype-users/node_modules/thread-loader/dist/cjs.js!/home/beskar/eos-prototype-users/node_modules/babel-loader/lib/index.js!/home/beskar/eos-prototype-users/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/beskar/eos-prototype-users/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/beskar/eos-prototype-users/src/views/card/card-action/CardAction.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/beskar/eos-prototype-users/src/views/card/card-action/CardAction.vue","mtime":1609867154633},{"path":"/home/beskar/eos-prototype-users/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/beskar/eos-prototype-users/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/beskar/eos-prototype-users/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/beskar/eos-prototype-users/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/beskar/eos-prototype-users/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLnRpbWVycy5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBCQ2FyZEFjdGlvbnMgZnJvbSAnQGNvcmUvY29tcG9uZW50cy9iLWNhcmQtYWN0aW9ucy9CQ2FyZEFjdGlvbnMudnVlJzsKaW1wb3J0IHsgQlJvdywgQkNvbCwgQlRhYmxlLCBCQ2FyZFRleHQgfSBmcm9tICdib290c3RyYXAtdnVlJzsKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIEJDYXJkQWN0aW9uczogQkNhcmRBY3Rpb25zLAogICAgQlJvdzogQlJvdywKICAgIEJDb2w6IEJDb2wsCiAgICBCVGFibGU6IEJUYWJsZSwKICAgIEJDYXJkVGV4dDogQkNhcmRUZXh0CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZmllbGRzOiBbJ0FDVElPTicsIHsKICAgICAgICBrZXk6ICdJQ09OJywKICAgICAgICBsYWJlbDogJ0lDT04nCiAgICAgIH0sICdERVRBSUxTJ10sCiAgICAgIGl0ZW1zOiBbewogICAgICAgIEFDVElPTjogJ0NvbGxhcHNlJywKICAgICAgICBJQ09OOiAnQ2hldnJvbkRvd25JY29uJywKICAgICAgICBERVRBSUxTOiAnQ29sbGFwc2UgY2FyZCBjb250ZW50IHVzaW5nIGNvbGxhcHNlIGFjdGlvbi4nCiAgICAgIH0sIHsKICAgICAgICBBQ1RJT046ICdSZWZyZXNoIENvbnRlbnQnLAogICAgICAgIElDT046ICdSb3RhdGVDd0ljb24nLAogICAgICAgIERFVEFJTFM6ICdSZWZyZXNoIHlvdXIgY2FyZCBjb250ZW50IHVzaW5nIHJlZnJlc2ggYWN0aW9uLicKICAgICAgfSwgewogICAgICAgIEFDVElPTjogJ1JlbW92ZSBDYXJkJywKICAgICAgICBJQ09OOiAnWEljb24nLAogICAgICAgIERFVEFJTFM6ICdSZW1vdmUgY2FyZCBmcm9tIHBhZ2UgdXNpbmcgcmVtb3ZlIGNhcmQgYWN0aW9uJwogICAgICB9XQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIC8vIHN0b3AgcmVmcmVzaGluZyBjYXJkIGluIDMgc2VjCiAgICByZWZyZXNoU3RvcDogZnVuY3Rpb24gcmVmcmVzaFN0b3AoY2FyZE5hbWUpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICAgIF90aGlzLiRyZWZzW2NhcmROYW1lXS5zaG93TG9hZGluZyA9IGZhbHNlOwogICAgICB9LCAzMDAwKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["CardAction.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8FA,OAAA,YAAA,MAAA,kDAAA;AACA,SACA,IADA,EACA,IADA,EACA,MADA,EACA,SADA,QAEA,eAFA;AAIA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,YAAA,EAAA,YADA;AAEA,IAAA,IAAA,EAAA,IAFA;AAGA,IAAA,IAAA,EAAA,IAHA;AAIA,IAAA,MAAA,EAAA,MAJA;AAKA,IAAA,SAAA,EAAA;AALA,GADA;AAQA,EAAA,IARA,kBAQA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,CACA,QADA,EAEA;AAAA,QAAA,GAAA,EAAA,MAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAFA,EAGA,SAHA,CADA;AAMA,MAAA,KAAA,EAAA,CACA;AAAA,QAAA,MAAA,EAAA,UAAA;AAAA,QAAA,IAAA,EAAA,iBAAA;AAAA,QAAA,OAAA,EAAA;AAAA,OADA,EAEA;AAAA,QAAA,MAAA,EAAA,iBAAA;AAAA,QAAA,IAAA,EAAA,cAAA;AAAA,QAAA,OAAA,EAAA;AAAA,OAFA,EAGA;AAAA,QAAA,MAAA,EAAA,aAAA;AAAA,QAAA,IAAA,EAAA,OAAA;AAAA,QAAA,OAAA,EAAA;AAAA,OAHA;AANA,KAAA;AAYA,GArBA;AAsBA,EAAA,OAAA,EAAA;AAEA;AACA,IAAA,WAHA,uBAGA,QAHA,EAGA;AAAA;;AACA,MAAA,UAAA,CAAA,YAAA;AACA,QAAA,KAAA,CAAA,KAAA,CAAA,QAAA,EAAA,WAAA,GAAA,KAAA;AACA,OAFA,EAEA,IAFA,CAAA;AAGA;AAPA;AAtBA,CAAA","sourcesContent":["<template>\n  <section id=\"card-actions\">\n    <b-row>\n\n      <!-- card actions -->\n      <b-col cols=\"12\">\n        <b-card-actions\n          ref=\"cardAction\"\n          title=\"Card Actions\"\n          @refresh=\"refreshStop('cardAction')\"\n        >\n          <b-row>\n            <b-col cols=\"12\">\n              <b-table\n                responsive\n                :items=\"items\"\n                bordered\n              >\n                <template\n                  #cell(ICON)=\"data\"\n                  class=\"text-center\"\n                >\n                  <div class=\"text-center\">\n                    <feather-icon :icon=\"data.value\" />\n                  </div>\n                </template>\n              </b-table>\n            </b-col>\n          </b-row>\n        </b-card-actions>\n      </b-col>\n\n      <!-- card collapsible  -->\n      <b-col md=\"6\">\n        <b-card-actions\n          title=\"Collapsible\"\n          action-collapse\n        >\n          <b-card-text>\n            <span>You can create a collapsible content by adding </span>\n            <code>actionCollapse</code>\n            <span> prop in </span>\n            <code>&lt;b-card-actions&gt;</code>\n          </b-card-text>\n          <b-card-text>\n            <span>Click on </span>\n            <feather-icon icon=\"ChevronDownIcon\" />\n            <span> to see card collapse in action.</span>\n          </b-card-text>\n        </b-card-actions>\n      </b-col>\n\n      <!-- card refresh -->\n      <b-col md=\"6\">\n        <b-card-actions\n          ref=\"refreshCard\"\n          title=\"Refresh Content\"\n          action-refresh\n          @refresh=\"refreshStop('refreshCard')\"\n        >\n          <b-card-text>\n            To create a card with refresh action use <code>actionRefresh</code> prop along with\n            <code>&lt;b-card-actions&gt;</code>\n          </b-card-text>\n          <b-card-text>\n            <span>Click on </span>\n            <feather-icon icon=\"RotateCwIcon\" />\n            <span> icon to see refresh card content in action.</span>\n          </b-card-text>\n        </b-card-actions>\n      </b-col>\n\n      <!-- card remove -->\n      <b-col md=\"6\">\n        <b-card-actions\n          title=\"Remove Card\"\n          action-close\n        >\n          <b-card-text>\n            You can create a closeable card by using <code>actionClose</code> prop along with\n            <code>&lt;b-card-actions&gt;</code>\n          </b-card-text>\n          <b-card-text>\n            <span>Click on </span>\n            <feather-icon icon=\"XIcon\" />\n            <span> icon to see closeable card in action.</span>\n          </b-card-text>\n        </b-card-actions>\n      </b-col>\n    </b-row>\n  </section>\n</template>\n\n<script>\nimport BCardActions from '@core/components/b-card-actions/BCardActions.vue'\nimport {\n  BRow, BCol, BTable, BCardText,\n} from 'bootstrap-vue'\n\nexport default {\n  components: {\n    BCardActions,\n    BRow,\n    BCol,\n    BTable,\n    BCardText,\n  },\n  data() {\n    return {\n      fields: [\n        'ACTION',\n        { key: 'ICON', label: 'ICON' },\n        'DETAILS',\n      ],\n      items: [\n        { ACTION: 'Collapse', ICON: 'ChevronDownIcon', DETAILS: 'Collapse card content using collapse action.' },\n        { ACTION: 'Refresh Content', ICON: 'RotateCwIcon', DETAILS: 'Refresh your card content using refresh action.' },\n        { ACTION: 'Remove Card', ICON: 'XIcon', DETAILS: 'Remove card from page using remove card action' },\n      ],\n    }\n  },\n  methods: {\n\n    // stop refreshing card in 3 sec\n    refreshStop(cardName) {\n      setTimeout(() => {\n        this.$refs[cardName].showLoading = false\n      }, 3000)\n    },\n  },\n}\n</script>\n"],"sourceRoot":"src/views/card/card-action"}]}