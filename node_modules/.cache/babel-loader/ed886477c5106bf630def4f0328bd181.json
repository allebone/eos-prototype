{"remainingRequest":"/home/beskar/eos-prototype-users/node_modules/thread-loader/dist/cjs.js!/home/beskar/eos-prototype-users/node_modules/babel-loader/lib/index.js!/home/beskar/eos-prototype-users/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/beskar/eos-prototype-users/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/beskar/eos-prototype-users/src/views/components/modal/ModalMessageBox.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/beskar/eos-prototype-users/src/views/components/modal/ModalMessageBox.vue","mtime":1609867154641},{"path":"/home/beskar/eos-prototype-users/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/beskar/eos-prototype-users/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/beskar/eos-prototype-users/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/beskar/eos-prototype-users/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/beskar/eos-prototype-users/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IEJDYXJkQ29kZSBmcm9tICdAY29yZS9jb21wb25lbnRzL2ItY2FyZC1jb2RlJzsKaW1wb3J0IHsgQkJ1dHRvbiwgQkNhcmRUZXh0IH0gZnJvbSAnYm9vdHN0cmFwLXZ1ZSc7CmltcG9ydCBSaXBwbGUgZnJvbSAndnVlLXJpcHBsZS1kaXJlY3RpdmUnOwppbXBvcnQgeyBjb2RlTWVzc2FnZUJveCB9IGZyb20gJy4vY29kZSc7CmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBCQ2FyZENvZGU6IEJDYXJkQ29kZSwKICAgIEJCdXR0b246IEJCdXR0b24sCiAgICBCQ2FyZFRleHQ6IEJDYXJkVGV4dAogIH0sCiAgZGlyZWN0aXZlczogewogICAgUmlwcGxlOiBSaXBwbGUKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBib3hPbmU6ICcnLAogICAgICBib3hUd286ICcnLAogICAgICBjb2RlTWVzc2FnZUJveDogY29kZU1lc3NhZ2VCb3gKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBzaG93TXNnQm94T25lOiBmdW5jdGlvbiBzaG93TXNnQm94T25lKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdGhpcy5ib3hPbmUgPSAnJzsKICAgICAgdGhpcy4kYnZNb2RhbC5tc2dCb3hDb25maXJtKCdBcmUgeW91IHN1cmU/JywgewogICAgICAgIGNhbmNlbFZhcmlhbnQ6ICdvdXRsaW5lLXNlY29uZGFyeScKICAgICAgfSkudGhlbihmdW5jdGlvbiAodmFsdWUpIHsKICAgICAgICBfdGhpcy5ib3hPbmUgPSB2YWx1ZTsKICAgICAgfSk7CiAgICB9LAogICAgc2hvd01zZ0JveFR3bzogZnVuY3Rpb24gc2hvd01zZ0JveFR3bygpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICB0aGlzLmJveFR3byA9ICcnOwogICAgICB0aGlzLiRidk1vZGFsLm1zZ0JveENvbmZpcm0oJ1BsZWFzZSBjb25maXJtIHRoYXQgeW91IHdhbnQgdG8gZGVsZXRlIGV2ZXJ5dGhpbmcuJywgewogICAgICAgIHRpdGxlOiAnUGxlYXNlIENvbmZpcm0nLAogICAgICAgIHNpemU6ICdzbScsCiAgICAgICAgb2tWYXJpYW50OiAncHJpbWFyeScsCiAgICAgICAgb2tUaXRsZTogJ1llcycsCiAgICAgICAgY2FuY2VsVGl0bGU6ICdObycsCiAgICAgICAgY2FuY2VsVmFyaWFudDogJ291dGxpbmUtc2Vjb25kYXJ5JywKICAgICAgICBoaWRlSGVhZGVyQ2xvc2U6IGZhbHNlLAogICAgICAgIGNlbnRlcmVkOiB0cnVlCiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHZhbHVlKSB7CiAgICAgICAgX3RoaXMyLmJveFR3byA9IHZhbHVlOwogICAgICB9KTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["ModalMessageBox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA,OAAA,SAAA,MAAA,8BAAA;AACA,SAAA,OAAA,EAAA,SAAA,QAAA,eAAA;AACA,OAAA,MAAA,MAAA,sBAAA;AACA,SAAA,cAAA,QAAA,QAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,SAAA,EAAA,SADA;AAEA,IAAA,OAAA,EAAA,OAFA;AAGA,IAAA,SAAA,EAAA;AAHA,GADA;AAMA,EAAA,UAAA,EAAA;AACA,IAAA,MAAA,EAAA;AADA,GANA;AASA,EAAA,IATA,kBASA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,EADA;AAEA,MAAA,MAAA,EAAA,EAFA;AAGA,MAAA,cAAA,EAAA;AAHA,KAAA;AAKA,GAfA;AAgBA,EAAA,OAAA,EAAA;AACA,IAAA,aADA,2BACA;AAAA;;AACA,WAAA,MAAA,GAAA,EAAA;AACA,WAAA,QAAA,CACA,aADA,CACA,eADA,EACA;AACA,QAAA,aAAA,EAAA;AADA,OADA,EAIA,IAJA,CAIA,UAAA,KAAA,EAAA;AACA,QAAA,KAAA,CAAA,MAAA,GAAA,KAAA;AACA,OANA;AAOA,KAVA;AAWA,IAAA,aAXA,2BAWA;AAAA;;AACA,WAAA,MAAA,GAAA,EAAA;AACA,WAAA,QAAA,CACA,aADA,CACA,oDADA,EACA;AACA,QAAA,KAAA,EAAA,gBADA;AAEA,QAAA,IAAA,EAAA,IAFA;AAGA,QAAA,SAAA,EAAA,SAHA;AAIA,QAAA,OAAA,EAAA,KAJA;AAKA,QAAA,WAAA,EAAA,IALA;AAMA,QAAA,aAAA,EAAA,mBANA;AAOA,QAAA,eAAA,EAAA,KAPA;AAQA,QAAA,QAAA,EAAA;AARA,OADA,EAWA,IAXA,CAWA,UAAA,KAAA,EAAA;AACA,QAAA,MAAA,CAAA,MAAA,GAAA,KAAA;AACA,OAbA;AAcA;AA3BA;AAhBA,CAAA","sourcesContent":["<template>\n  <b-card-code title=\"Confirm message box\">\n    <b-card-text class=\"mb-0\">\n      <span>BootstrapVue provides a few built in Message Box methods on the exposed </span>\n      <code>this.$bvModal</code>\n      <span>\n        object. These methods provide a way to generate simple OK and Confirm style modal messages, from anywhere in\n        your app without having to explicitly place a\n      </span>\n      <code>&lt;b-modal&gt;</code>\n      <span> component in your pages.</span>\n    </b-card-text>\n\n    <!-- Modal Buttons -->\n    <div class=\"demo-inline-spacing\">\n      <b-button\n        v-ripple.400=\"'rgba(113, 102, 240, 0.15)'\"\n        variant=\"outline-primary\"\n        @click=\"showMsgBoxOne\"\n      >\n        Simple msgBoxConfirm\n      </b-button>\n      <b-button\n        v-ripple.400=\"'rgba(113, 102, 240, 0.15)'\"\n        variant=\"outline-primary\"\n        @click=\"showMsgBoxTwo\"\n      >\n        msgBoxConfirm with options\n      </b-button>\n    </div>\n\n    <!-- modal status -->\n    <b-card-text class=\"mt-2\">\n      First modal return value: <span class=\"font-weight-bold\">{{ String(boxOne) }}</span>\n    </b-card-text>\n    <b-card-text class=\"mb-0\">\n      Second modal return value: <span class=\"font-weight-bold\">{{ String(boxTwo) }}</span>\n    </b-card-text>\n\n    <template #code>\n      {{ codeMessageBox }}\n    </template>\n  </b-card-code>\n</template>\n\n<script>\nimport BCardCode from '@core/components/b-card-code'\nimport { BButton, BCardText } from 'bootstrap-vue'\nimport Ripple from 'vue-ripple-directive'\nimport { codeMessageBox } from './code'\n\nexport default {\n  components: {\n    BCardCode,\n    BButton,\n    BCardText,\n  },\n  directives: {\n    Ripple,\n  },\n  data() {\n    return {\n      boxOne: '',\n      boxTwo: '',\n      codeMessageBox,\n    }\n  },\n  methods: {\n    showMsgBoxOne() {\n      this.boxOne = ''\n      this.$bvModal\n        .msgBoxConfirm('Are you sure?', {\n          cancelVariant: 'outline-secondary',\n        })\n        .then(value => {\n          this.boxOne = value\n        })\n    },\n    showMsgBoxTwo() {\n      this.boxTwo = ''\n      this.$bvModal\n        .msgBoxConfirm('Please confirm that you want to delete everything.', {\n          title: 'Please Confirm',\n          size: 'sm',\n          okVariant: 'primary',\n          okTitle: 'Yes',\n          cancelTitle: 'No',\n          cancelVariant: 'outline-secondary',\n          hideHeaderClose: false,\n          centered: true,\n        })\n        .then(value => {\n          this.boxTwo = value\n        })\n    },\n  },\n}\n</script>\n"],"sourceRoot":"src/views/components/modal"}]}