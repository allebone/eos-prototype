{"remainingRequest":"/home/beskar/eos-prototype-users/node_modules/thread-loader/dist/cjs.js!/home/beskar/eos-prototype-users/node_modules/babel-loader/lib/index.js!/home/beskar/eos-prototype-users/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/beskar/eos-prototype-users/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/beskar/eos-prototype-users/src/views/components/toasts/ToastsVariants.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/beskar/eos-prototype-users/src/views/components/toasts/ToastsVariants.vue","mtime":1609867154645},{"path":"/home/beskar/eos-prototype-users/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/beskar/eos-prototype-users/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/beskar/eos-prototype-users/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/beskar/eos-prototype-users/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/beskar/eos-prototype-users/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IEJDYXJkQ29kZSBmcm9tICdAY29yZS9jb21wb25lbnRzL2ItY2FyZC1jb2RlJzsKaW1wb3J0IHsgQkJ1dHRvbiwgQkNhcmRUZXh0IH0gZnJvbSAnYm9vdHN0cmFwLXZ1ZSc7CmltcG9ydCBSaXBwbGUgZnJvbSAndnVlLXJpcHBsZS1kaXJlY3RpdmUnOwppbXBvcnQgeyBjb2RlVmFyaWFudCB9IGZyb20gJy4vY29kZSc7CmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBCQ2FyZENvZGU6IEJDYXJkQ29kZSwKICAgIEJCdXR0b246IEJCdXR0b24sCiAgICBCQ2FyZFRleHQ6IEJDYXJkVGV4dAogIH0sCiAgZGlyZWN0aXZlczogewogICAgUmlwcGxlOiBSaXBwbGUKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjb2RlVmFyaWFudDogY29kZVZhcmlhbnQKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBtYWtlVG9hc3Q6IGZ1bmN0aW9uIG1ha2VUb2FzdCgpIHsKICAgICAgdmFyIHZhcmlhbnQgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IG51bGw7CiAgICAgIHRoaXMuJGJ2VG9hc3QudG9hc3QoJ1RvYXN0IGJvZHkgY29udGVudCcsIHsKICAgICAgICB0aXRsZTogIlZhcmlhbnQgIi5jb25jYXQodmFyaWFudCB8fCAnZGVmYXVsdCcpLAogICAgICAgIHZhcmlhbnQ6IHZhcmlhbnQsCiAgICAgICAgc29saWQ6IGZhbHNlCiAgICAgIH0pOwogICAgfQogIH0KfTs="},{"version":3,"sources":["ToastsVariants.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgFA,OAAA,SAAA,MAAA,8BAAA;AACA,SAAA,OAAA,EAAA,SAAA,QAAA,eAAA;AACA,OAAA,MAAA,MAAA,sBAAA;AACA,SAAA,WAAA,QAAA,QAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,SAAA,EAAA,SADA;AAEA,IAAA,OAAA,EAAA,OAFA;AAGA,IAAA,SAAA,EAAA;AAHA,GADA;AAMA,EAAA,UAAA,EAAA;AACA,IAAA,MAAA,EAAA;AADA,GANA;AASA,EAAA,IATA,kBASA;AACA,WAAA;AACA,MAAA,WAAA,EAAA;AADA,KAAA;AAGA,GAbA;AAcA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,uBACA;AAAA,UAAA,OAAA,uEAAA,IAAA;AACA,WAAA,QAAA,CAAA,KAAA,CAAA,oBAAA,EAAA;AACA,QAAA,KAAA,oBAAA,OAAA,IAAA,SAAA,CADA;AAEA,QAAA,OAAA,EAAA,OAFA;AAGA,QAAA,KAAA,EAAA;AAHA,OAAA;AAKA;AAPA;AAdA,CAAA","sourcesContent":["<template>\n  <b-card-code title=\"Variants\">\n    <b-card-text class=\"mb-0\">\n      BootstrapVue toasts provide custom CSS to define color variants. Variants follow the standard Bootstrap v4 variant\n      names. If you have custom SCSS defined Bootstrap color theme variants, the toast custom SCSS will automatically\n      create toast variants for you (refer to the Theming reference section).\n    </b-card-text>\n\n    <div class=\"demo-inline-spacing\">\n\n      <!-- default -->\n      <b-button\n        variant=\"gradient-primary\"\n        @click=\"makeToast()\"\n      >\n        Default\n      </b-button>\n\n      <!-- primary -->\n      <b-button\n        v-ripple.400=\"'rgba(113, 102, 240, 0.15)'\"\n        variant=\"outline-primary\"\n        @click=\"makeToast('primary')\"\n      >\n        Primary\n      </b-button>\n\n      <!-- secondary -->\n      <b-button\n        v-ripple.400=\"'rgba(186, 191, 199, 0.15)'\"\n        variant=\"outline-secondary\"\n        @click=\"makeToast('secondary')\"\n      >\n        Secondary\n      </b-button>\n\n      <!-- warning -->\n      <b-button\n        v-ripple.400=\"'rgba(255, 159, 67, 0.15)'\"\n        variant=\"outline-warning\"\n        @click=\"makeToast('warning')\"\n      >\n        Warning\n      </b-button>\n\n      <!-- danger -->\n      <b-button\n        v-ripple.400=\"'rgba(255, 159, 67, 0.15)'\"\n        variant=\"outline-danger\"\n        @click=\"makeToast('danger')\"\n      >\n        Danger\n      </b-button>\n\n      <!-- success -->\n      <b-button\n        v-ripple.400=\"'rgba(40, 199, 111, 0.15)'\"\n        variant=\"outline-success\"\n        @click=\"makeToast('success')\"\n      >\n        Success\n      </b-button>\n\n      <!-- info -->\n      <b-button\n        v-ripple.400=\"'rgba(0, 207, 232, 0.15)'\"\n        variant=\"outline-info\"\n        @click=\"makeToast('info')\"\n      >\n        Info\n      </b-button>\n    </div>\n\n    <template #code>\n      {{ codeVariant }}\n    </template>\n  </b-card-code>\n</template>\n\n<script>\nimport BCardCode from '@core/components/b-card-code'\nimport { BButton, BCardText } from 'bootstrap-vue'\nimport Ripple from 'vue-ripple-directive'\nimport { codeVariant } from './code'\n\nexport default {\n  components: {\n    BCardCode,\n    BButton,\n    BCardText,\n  },\n  directives: {\n    Ripple,\n  },\n  data() {\n    return {\n      codeVariant,\n    }\n  },\n  methods: {\n    makeToast(variant = null) {\n      this.$bvToast.toast('Toast body content', {\n        title: `Variant ${variant || 'default'}`,\n        variant,\n        solid: false,\n      })\n    },\n  },\n}\n</script>\n"],"sourceRoot":"src/views/components/toasts"}]}